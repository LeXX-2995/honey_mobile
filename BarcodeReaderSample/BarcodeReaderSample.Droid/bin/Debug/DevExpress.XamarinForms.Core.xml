<?xml version="1.0" encoding="utf-8"?>
<doc xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <assembly>
    <name>DevExpress.XamarinForms.Core</name>
  </assembly>
  <members>
    <member name="N:DevExpress.Data">
      <summary>
        <para>Contains enumerations that implement the data management functionality.</para>
      </summary>
    </member>
    <member name="T:DevExpress.Data.CollectionChangeAction">
      <summary />
    </member>
    <member name="F:DevExpress.Data.CollectionChangeAction.Add">
      <summary />
    </member>
    <member name="F:DevExpress.Data.CollectionChangeAction.Refresh">
      <summary />
    </member>
    <member name="F:DevExpress.Data.CollectionChangeAction.Remove">
      <summary />
    </member>
    <member name="F:DevExpress.Data.CollectionChangeAction.Replace">
      <summary />
    </member>
    <member name="F:DevExpress.Data.CollectionChangeAction.Reset">
      <summary />
    </member>
    <member name="T:DevExpress.Data.ColumnGroupInterval">
      <summary />
    </member>
    <member name="F:DevExpress.Data.ColumnGroupInterval.Alphabetical">
      <summary />
    </member>
    <member name="F:DevExpress.Data.ColumnGroupInterval.Date">
      <summary />
    </member>
    <member name="F:DevExpress.Data.ColumnGroupInterval.DateMonth">
      <summary />
    </member>
    <member name="F:DevExpress.Data.ColumnGroupInterval.DateQuarter">
      <summary />
    </member>
    <member name="F:DevExpress.Data.ColumnGroupInterval.DateRange">
      <summary />
    </member>
    <member name="F:DevExpress.Data.ColumnGroupInterval.DateYear">
      <summary />
    </member>
    <member name="F:DevExpress.Data.ColumnGroupInterval.Default">
      <summary />
    </member>
    <member name="F:DevExpress.Data.ColumnGroupInterval.DisplayText">
      <summary />
    </member>
    <member name="F:DevExpress.Data.ColumnGroupInterval.Value">
      <summary />
    </member>
    <member name="T:DevExpress.Data.ColumnSortMode">
      <summary />
    </member>
    <member name="F:DevExpress.Data.ColumnSortMode.DisplayText">
      <summary />
    </member>
    <member name="F:DevExpress.Data.ColumnSortMode.Value">
      <summary />
    </member>
    <member name="T:DevExpress.Data.ColumnSortOrder">
      <summary />
    </member>
    <member name="F:DevExpress.Data.ColumnSortOrder.Ascending">
      <summary />
    </member>
    <member name="F:DevExpress.Data.ColumnSortOrder.Descending">
      <summary />
    </member>
    <member name="F:DevExpress.Data.ColumnSortOrder.None">
      <summary />
    </member>
    <member name="T:DevExpress.Data.UnboundColumnType">
      <summary />
    </member>
    <member name="F:DevExpress.Data.UnboundColumnType.Boolean">
      <summary />
    </member>
    <member name="F:DevExpress.Data.UnboundColumnType.Bound">
      <summary />
    </member>
    <member name="F:DevExpress.Data.UnboundColumnType.DateTime">
      <summary />
    </member>
    <member name="F:DevExpress.Data.UnboundColumnType.Decimal">
      <summary />
    </member>
    <member name="F:DevExpress.Data.UnboundColumnType.Integer">
      <summary />
    </member>
    <member name="F:DevExpress.Data.UnboundColumnType.Object">
      <summary />
    </member>
    <member name="F:DevExpress.Data.UnboundColumnType.String">
      <summary />
    </member>
    <member name="T:DevExpress.Data.ValueComparer">
      <summary />
    </member>
    <member name="M:DevExpress.Data.ValueComparer.#ctor">
      <summary />
    </member>
    <member name="M:DevExpress.Data.ValueComparer.Compare(System.Object,System.Object)">
      <summary />
      <param name="x"></param>
      <param name="y"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.Data.ValueComparer.ObjectEquals(System.Object,System.Object)">
      <summary />
      <param name="x"></param>
      <param name="y"></param>
      <returns></returns>
    </member>
    <member name="N:DevExpress.Utils">
      <summary />
    </member>
    <member name="T:DevExpress.Utils.DefaultBoolean">
      <summary />
    </member>
    <member name="F:DevExpress.Utils.DefaultBoolean.Default">
      <summary />
    </member>
    <member name="F:DevExpress.Utils.DefaultBoolean.False">
      <summary />
    </member>
    <member name="F:DevExpress.Utils.DefaultBoolean.True">
      <summary />
    </member>
    <member name="N:DevExpress.XamarinForms.Core.Filtering">
      <summary>
        <para>Contains classes that allows you to filter data.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.Aggregate">
      <summary>
        <para>Lists aggregate functions the Criteria Language supports.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.Aggregate.Avg">
      <summary>
        <para>Evaluates the average of the values in the collection.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.Aggregate.Count">
      <summary>
        <para>Returns the number of objects in the collection.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.Aggregate.Exists">
      <summary>
        <para>Determines whether the object exists in the collection.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.Aggregate.Max">
      <summary>
        <para>Returns the maximum expression value in the collection.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.Aggregate.Min">
      <summary>
        <para>Returns the minimum expression value in the collection.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.Aggregate.Single">
      <summary>
        <para>Returns a single object from the collection.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.Aggregate.Sum">
      <summary>
        <para>Returns the sum of all the expression values in the collection.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.AggregateOperand">
      <summary>
        <para>The operator that calculates an aggregate expression (MIN, MAX, SUM, etc.).</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.#ctor">
      <summary>
        <para>Initializes an <see cref="T:DevExpress.XamarinForms.Core.Filtering.AggregateOperand"/> instance with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.#ctor(DevExpress.XamarinForms.Core.Filtering.OperandProperty,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.Aggregate,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes an <see cref="T:DevExpress.XamarinForms.Core.Filtering.AggregateOperand"/> instance with the specified criterion determining the collection property, criterion defining the property to aggregate, operator type, and filter criterion.</para>
      </summary>
      <param name="collectionProperty">The operand that specifies the collection property to aggregate by which the aggregate operator computes the aggregate value. The operand can specify a path through object relationships, for example &quot;Employer.Addresses&quot;.</param>
      <param name="aggregatedExpression">The operator that specifies the property of an object from the collection by which the aggregate operator computes the aggregate value. The operator can specify a path through object relationships, for example &quot;Address.City&quot;.</param>
      <param name="type">The type of the aggregate operator.</param>
      <param name="condition">The filter criterion the operand uses to filter collection values by which it calculates the aggregate value. Pass null if the operand should aggregate all values.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.#ctor(System.String,DevExpress.XamarinForms.Core.Filtering.Aggregate)">
      <summary>
        <para>Initializes an <see cref="T:DevExpress.XamarinForms.Core.Filtering.AggregateOperand"/> instance with the specified collection property name and operator type.</para>
      </summary>
      <param name="collectionProperty">The name of the collection property by whose values the operand calculates an aggregate value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="type">The aggregate operator type.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.#ctor(System.String,DevExpress.XamarinForms.Core.Filtering.Aggregate,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes an <see cref="T:DevExpress.XamarinForms.Core.Filtering.AggregateOperand"/> instance with the specified collection property name, operator type, and filter criterion.</para>
      </summary>
      <param name="collectionProperty">The name of the collection property by whose values the operand calculates an aggregate value. It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="type">The aggregate operator type.</param>
      <param name="condition">The filter criterion the operand uses to filter collection values by which it calculates the aggregate value. Pass null if the operand should aggregate all values.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.#ctor(System.String,System.String,DevExpress.XamarinForms.Core.Filtering.Aggregate)">
      <summary>
        <para>Initializes an <see cref="T:DevExpress.XamarinForms.Core.Filtering.AggregateOperand"/> instance with the specified collection property name, name of a property to aggregate, and operator type.</para>
      </summary>
      <param name="collectionProperty">The name of the collection property by whose objects the operand calculates an aggregate value. It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="aggregatedExpression">The name of the property of the object from the property collection that the operand uses to calculate the aggregate value. It can be a path through object relationships, for example &quot;Address.City&quot;. This value is case-sensitive.</param>
      <param name="type">The type of the aggregate operator.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.#ctor(System.String,System.String,DevExpress.XamarinForms.Core.Filtering.Aggregate,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes an <see cref="T:DevExpress.XamarinForms.Core.Filtering.AggregateOperand"/> instance with the specified collection property name, name of a property to aggregate, operator type, and filter criterion.</para>
      </summary>
      <param name="collectionProperty">The name of the collection property by whose objects the operand calculates an aggregate value. It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="aggregatedExpression">The name of the property of the object from the property collection that the operand uses to calculate the aggregate value. It can be a path through object relationships, for example &quot;Address.City&quot;. This value is case-sensitive.</param>
      <param name="type">The type of the aggregate operator.</param>
      <param name="condition">The filter criterion the operand uses to filter collection values by which it calculates the aggregate value. Pass null if the operand should aggregate all values.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Accept(DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor)">
      <summary>
        <para>For internal use only. Accepts the specified visitor.</para>
      </summary>
      <param name="visitor">The criteria visitor to be accepted.</param>
      <returns>The visitor acceptance result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Accept``1(DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para>For internal use only. Accepts the specified visitor.</para>
      </summary>
      <param name="visitor">The criteria visitor to be accepted.</param>
      <typeparam name="T">The type of the acceptance result.</typeparam>
      <returns>The visitor acceptance result.</returns>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.AggregatedExpression">
      <summary>
        <para>Gets or sets the operator that defines how to process objects from a collection that <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.CollectionProperty"/> specifies.</para>
      </summary>
      <value>The operator that defines how to process objects from a collection that <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.CollectionProperty"/> specifies.</value>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.AggregateType">
      <summary>
        <para>Gets or sets the type of the aggregate operator.</para>
      </summary>
      <value>The type of the aggregate operator.</value>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Avg(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.AggregateOperand"/> instance that evaluates the average value of a property the aggregateExpression argument specifies. The new operand computes the aggregate value against elements of the current operand’s <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.CollectionProperty"/> that match the current operand’s <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Condition"/>.</para>
      </summary>
      <param name="aggregatedExpression">The operator that specifies the property of an object from the collection by which the aggregate operator computes the aggregate value. The operator can specify a path through object relationships, for example &quot;Address.City&quot;.</param>
      <returns>The new Avg operand.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Clone">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.AggregateOperand"/> instance that is a copy of the current instance.</para>
      </summary>
      <returns>The copy of the current instance.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.CloneCommon">
      <summary />
      <returns></returns>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.CollectionProperty">
      <summary>
        <para>Gets or sets an operand that specifies the collection property by which the aggregate operand evaluates the average value.</para>
      </summary>
      <value>The operand that specifies the collection property by which the aggregate operand evaluates the average value.</value>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Condition">
      <summary>
        <para>Gets or sets the filter criterion the aggregate operand uses to filter values to aggregate from the collection property that the <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.CollectionProperty"/> specifies.</para>
      </summary>
      <value>The filter criterion the aggregate operand uses to filter values to aggregate from the collection property that the <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.CollectionProperty"/> specifies.</value>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Count">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.AggregateOperand"/> instance that evaluates the count of objects in the collection. The new operand computes the aggregate value against elements of the current operand’s <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.CollectionProperty"/> that match the current operand’s <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Condition"/>.</para>
      </summary>
      <returns>The new Count operand.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Count(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.AggregateOperand"/> instance that evaluates the count of objects in the collection. The new operand computes the aggregate value against elements of the current operand’s <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.CollectionProperty"/> that match the current operand’s <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Condition"/>.</para>
      </summary>
      <param name="aggregatedExpression">The operator that specifies the property of an object from the collection by which the aggregate operator computes the aggregate value. The operator can specify a path through object relationships, for example &quot;Address.City&quot;</param>
      <returns>The new Count operand.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.XamarinForms.Core.Filtering.AggregateOperand"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>true, if the specified object equals the current operator; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Exists">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.AggregateOperand"/> instance that evaluates whether an object exists in the collection. The new operand computes the aggregate value against elements of the current operand’s <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.CollectionProperty"/> that match the current operand’s <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Condition"/>.</para>
      </summary>
      <returns>The new Exist operand.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Exists(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.AggregateOperand"/> instance that evaluates whether the object that corresponds to the specified aggregatedExpression exists. The new operand computes the aggregate value against elements of the current operand’s <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.CollectionProperty"/> that match the current operand’s <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Condition"/>.</para>
      </summary>
      <param name="aggregatedExpression">The operator that specifies a condition to which objects from the collection should correspond.</param>
      <returns>The new Exist operand.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.IsTopLevel">
      <summary>
        <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</para>
      </summary>
      <value>true, if the <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.CollectionProperty"/> property value is null; otherwise, false.</value>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Max(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.AggregateOperand"/> instance that evaluates the maximum value in the collection. The new operand computes the aggregate value against elements of the current operand’s <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.CollectionProperty"/> that match the current operand’s <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Condition"/>.</para>
      </summary>
      <param name="aggregatedExpression">The operator that specifies the property of an object from the collection by which the aggregate operator computes the aggregate value. The operator can specify a path through object relationships, for example &quot;Address.City&quot;.</param>
      <returns>The new Max operand.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Min(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.AggregateOperand"/> instance that evaluates the minimum value in the collection. The new operand computes the aggregate value against elements of the current operand’s <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.CollectionProperty"/> that match the current operand’s <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Condition"/>.</para>
      </summary>
      <param name="aggregatedExpression">The operator that specifies the property of an object from the collection by which the aggregate operator computes the aggregate value. The operator can specify a path through object relationships, for example &quot;Address.City&quot;.</param>
      <returns>The new Min operand.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Single(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.AggregateOperand"/> which returns the single object from the current operand’s <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.CollectionProperty"/> that matches the current operand’s &lt;AggregateOperand.Condition.  The collection must be empty or contain one object.</para>
      </summary>
      <param name="aggregatedExpression">The operator that specifies the property of an object from the collection by which the aggregate operator computes the aggregate value. The operator can specify a path through object relationships, for example &quot;Address.City&quot;.</param>
      <returns>The new Single operand.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Sum(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Creates a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.AggregateOperand"/> instance that evaluates the summary value of a property the aggregateExpression argument specifies. The new operand computes the aggregate value against elements of the current operand’s <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.CollectionProperty"/> that match the current operand’s <see cref="P:DevExpress.XamarinForms.Core.Filtering.AggregateOperand.Condition"/>.</para>
      </summary>
      <param name="aggregatedExpression">The operator that specifies the property of an object from the collection by which the aggregate operator computes the aggregate value. The operator can specify a path through object relationships, for example &quot;Product.Income&quot;.</param>
      <returns>The new Sum operand.</returns>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.BetweenOperator">
      <summary>
        <para>The operator that determines whether the value lies in the specified value range.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BetweenOperator.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BetweenOperator"/> instance with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BetweenOperator.#ctor(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BetweenOperator"/> instance with the specified operators that define a property to test, and a value range.</para>
      </summary>
      <param name="testExpression">The operator that specifies the property to test.</param>
      <param name="beginExpression">The operator that defines the lowest value in the range.</param>
      <param name="endExpression">The operator that defines the highest value in the range.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BetweenOperator.#ctor(System.String,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BetweenOperator"/> instance with the specified tested property name, and operators that define a value range.</para>
      </summary>
      <param name="testPropertyName">The property to test. It can be a path through object relationships (e.g., &quot;Order.TotalIncome&quot;).  This value is case-sensitive.</param>
      <param name="beginExpression">The operator that defines the lowest value in the range.</param>
      <param name="endExpression">The operator that defines the highest value in the range.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BetweenOperator.#ctor(System.String,System.Object,System.Object)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BetweenOperator"/> instance with the specified tested property name, and objects that define a value range.</para>
      </summary>
      <param name="testPropertyName">The property to test. It can be a path through object relationships (e.g., &quot;Order.TotalIncome&quot;).  This value is case-sensitive.</param>
      <param name="beginValue">The lowest value in the range.</param>
      <param name="endValue">The highest value in the range.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BetweenOperator.Accept(DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor)">
      <summary>
        <para>For internal use only. Accepts the specified visitor.</para>
      </summary>
      <param name="visitor">The criteria visitor to accept.</param>
      <returns>The visitor acceptance result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BetweenOperator.Accept``1(DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para>For internal use only. Accepts the specified visitor.</para>
      </summary>
      <param name="visitor">The criteria visitor to accept.</param>
      <typeparam name="T">Type of the acceptance result.</typeparam>
      <returns>The visitor acceptance result.</returns>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.BetweenOperator.BeginExpression">
      <summary>
        <para>Gets or sets the expression that specifies the lowest value in the range.</para>
      </summary>
      <value>The expression that specifies the lowest value in the range.</value>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BetweenOperator.Clone">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BetweenOperator"/> instance that is a copy of the current instance.</para>
      </summary>
      <returns>The copy of the current instance.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BetweenOperator.CloneCommon">
      <summary />
      <returns></returns>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.BetweenOperator.EndExpression">
      <summary>
        <para>Gets or sets the expression that specifies the highest value in the range.</para>
      </summary>
      <value>The expression that specifies the highest value in the range.</value>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BetweenOperator.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.XamarinForms.Core.Filtering.BetweenOperator"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>true, if the specified object equals the current operator; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BetweenOperator.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.BetweenOperator.LeftOperand">
      <summary>
        <para>The property is obsolete. Gets or sets the expression that specifies the lowest value in the range.</para>
      </summary>
      <value>The expression that specifies the lowest value in the range.</value>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.BetweenOperator.Property">
      <summary>
        <para>The property is obsolete. Gets or sets the expression that specifies the value to test.</para>
      </summary>
      <value>The expression that specifies the value to test.</value>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.BetweenOperator.RightOperand">
      <summary>
        <para>The property is obsolete. Gets or sets the expression that specifies the highest value in the range.</para>
      </summary>
      <value>The expression that specifies the highest value in the range.</value>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.BetweenOperator.TestExpression">
      <summary>
        <para>Gets or sets the expression that specifies a value to test for being in the range.</para>
      </summary>
      <value>The expression that specifies a value to test for being in the range.</value>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator">
      <summary>
        <para>The operator that manipulates with two operands to calculate a result.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> instance with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the given operator type, and criteria that specify expressions to manipulate.</para>
      </summary>
      <param name="opLeft">The operator that specifies the first expression to compare.</param>
      <param name="opRight">The operator that specifies the second expression to compare.</param>
      <param name="type">The comparison operation.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Boolean)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The boolean value to compare with.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Boolean,DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value using the given operator type.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The boolean value to compare with.</param>
      <param name="type">The comparison operation.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Byte)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The byte value to compare with.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Byte,DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value using the given operator type.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The byte value to compare with.</param>
      <param name="type">The comparison operation.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Byte[])">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The byte array to compare with.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Byte[],DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value using the given operator type.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The byte array to compare with.</param>
      <param name="type">The comparison operation.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Char)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The character to compare with.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Char,DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value using the given operator type.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The character to compare with.</param>
      <param name="type">The comparison operation.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.DateTime)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The date-time value to compare with.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.DateTime,DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property with whose value the operator acts, the second value to manipulate, and the operator type.</para>
      </summary>
      <param name="propertyName">The name of the property with whose value the operator acts.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The second date-time value to manipulate with.</param>
      <param name="type">The operator type.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Decimal)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The decimal value to compare with.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Decimal,DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value using the given operator type.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The decimal value to compare with.</param>
      <param name="type">The comparison operation.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Double)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The double value to compare with.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Double,DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value using the given operator type.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The double value to compare with.</param>
      <param name="type">The comparison operation.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Guid)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The GUID to compare with.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Guid,DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value using the given operator type.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The GUID to compare with.</param>
      <param name="type">The comparison operation.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Int16)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The short value to compare with.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Int16,DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value using the given operator type.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The short value to compare with.</param>
      <param name="type">The comparison operation.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Int32)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The int value to compare with.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Int32,DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value using the given operator type.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The int value to compare with.</param>
      <param name="type">The comparison operation.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Int64)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The long value to compare with.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Int64,DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value using the given operator type.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The long value to compare with.</param>
      <param name="type">The comparison operation.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Object)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The object to compare with.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Object,DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value using the given operator type.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The object to compare with.</param>
      <param name="type">The comparison operation.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Single)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The float value to compare with.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.Single,DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value using the given operator type.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The float value to compare with.</param>
      <param name="type">The comparison operation.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.String)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The string to compare with.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.String,DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value using the given operator type.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The string to compare with.</param>
      <param name="type">The comparison operation.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.TimeSpan)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The time span to compare with.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.#ctor(System.String,System.TimeSpan,DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> with the specified name of a property whose value the operator compares with the passed value using the given operator type.</para>
      </summary>
      <param name="propertyName">The name of the property to compare with value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="value">The time span to compare with.</param>
      <param name="type">The comparison operation.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.Accept(DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor)">
      <summary>
        <para>For internal use only. Accepts the specified visitor.</para>
      </summary>
      <param name="visitor">The criteria visitor to be accepted.</param>
      <returns>The visitor acceptance result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.Accept``1(DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para>For internal use only. Accepts the specified visitor.</para>
      </summary>
      <param name="visitor">The criteria visitor to be accepted.</param>
      <typeparam name="T">The type of the acceptance result.</typeparam>
      <returns>The visitor acceptance result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.Clone">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> instance that is a copy of the current instance.</para>
      </summary>
      <returns>The copy of the current instance.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.CloneCommon">
      <summary />
      <returns></returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>true, if the specified object equals the current operator; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.LeftOperand">
      <summary>
        <para>The left operand.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.OperatorType">
      <summary>
        <para>The type of an operator the instance uses to calculate boolean result.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.RightOperand">
      <summary>
        <para>The right operand.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType">
      <summary>
        <para>Lists binary boolean operators the Criteria Language supports.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType.BitwiseAnd">
      <summary>
        <para>The bitwise AND operator.</para>
        <para>Pass a string like &quot;Field1Name &amp; Field2Name&quot; into the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])"/> method to create this operator from the string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType.BitwiseOr">
      <summary>
        <para>The bitwise OR operator.</para>
        <para>Pass a string like &quot;Field1Name | Field2Name&quot; into the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])"/> method to create this operator from the string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType.BitwiseXor">
      <summary>
        <para>The bitwise XOR operator.</para>
        <para>Pass a string like &quot;Field1Name ^ Field2Name&quot; into the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])"/> method to create this operator from the string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType.Divide">
      <summary>
        <para>The division operator.</para>
        <para>Pass a string like &quot;Field1Name / Field2Name&quot; into the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])"/> method to create this operator from the string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType.Equal">
      <summary>
        <para>The equal operator.</para>
        <para>Pass a string like &quot;Field1Name = Field2Name&quot; into the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])"/> method to create this operator from the string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType.Greater">
      <summary>
        <para>The greater than operator.</para>
        <para>Pass a string like &quot;Field1Name &gt; Field2Name&quot; into the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])"/> method to create this operator from the string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType.GreaterOrEqual">
      <summary>
        <para>The greater than or equal to operator.</para>
        <para>Pass a string like &quot;Field1Name &gt;= Field2Name&quot; into the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])"/> method to create this operator from the string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType.Less">
      <summary>
        <para>The less than operator.</para>
        <para>Pass a string like &quot;Field1Name &lt; Field2Name&quot; into the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])"/> method to create this operator from the string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType.LessOrEqual">
      <summary>
        <para>The less than or equal to operator.</para>
        <para>Pass a string like &quot;Field1Name &lt;= Field2Name&quot; into the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])"/> method to create this operator from the string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType.Like">
      <summary>
        <para>This operator is obsolete. The like operator. Use the <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.StartsWith"/>, <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.EndsWith"/>, or <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Contains"/> function operators if possible.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType.Minus">
      <summary>
        <para>The subtraction operator.</para>
        <para>Pass a string like &quot;Field1Name - Field2Name&quot; into the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])"/> method to create this operator from the string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType.Modulo">
      <summary>
        <para>The modulo operator (computes the dividing remainder of the first operand by the second).</para>
        <para>Pass a string like &quot;Field1Name % Field2Name&quot; into the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])"/> method to create this operator from the string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType.Multiply">
      <summary>
        <para>The multiplication operator.</para>
        <para>Pass a string like &quot;Field1Name * Field2Name&quot; into the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])"/> method to create this operator from the string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType.NotEqual">
      <summary>
        <para>The inequality operator.</para>
        <para>Pass a string like &quot;Field1Name != Field2Name&quot; into the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])"/> method to create this operator from the string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperatorType.Plus">
      <summary>
        <para>The addition operator.</para>
        <para>Pass a string like &quot;Field1Name + Field2Name&quot; into the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])"/> method to create this operator from the string.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.ConstantValue">
      <summary>
        <para>A constant value operand in Criteria Language expressions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ConstantValue.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.ConstantValue"/> instance with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ConstantValue.#ctor(System.Object)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.ConstantValue"/> instance with the specified value.</para>
      </summary>
      <param name="value">The operand value.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ConstantValue.Clone">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.ConstantValue"/> instance that is a copy of the current instance.</para>
      </summary>
      <returns>The copy of the current instance.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ConstantValue.CloneCommon">
      <summary />
      <returns></returns>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.ContainsOperator">
      <summary>
        <para>The operand that checks whether a collection contains at least one object that matches a criteria.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ContainsOperator.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.ContainsOperator"/> instance with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ContainsOperator.#ctor(DevExpress.XamarinForms.Core.Filtering.OperandProperty,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.ContainsOperator"/> instance with the specified property operand and search criterion.</para>
      </summary>
      <param name="collectionProperty">The operand that specifies the collection property to aggregate by which the aggregate operator computes the aggregate value.</param>
      <param name="condition">The criterion which the property should match.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ContainsOperator.#ctor(System.String,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.ContainsOperator"/> instance with the specified property name and search criterion.</para>
      </summary>
      <param name="collectionProperty">The name of the collection property by whose values the operand calculates an aggregate value. It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="condition">The criterion which the property should match.</param>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.CriteriaColumnAffinityResolver">
      <summary />
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaColumnAffinityResolver.GetAffinityColumn(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary />
      <param name="op"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaColumnAffinityResolver.SplitByColumns(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary />
      <param name="op"></param>
      <returns></returns>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator">
      <summary>
        <para>The base Criteria Language operator.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> class.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Accept(DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor)">
      <summary>
        <para>For internal use only. Accepts the specified visitor.</para>
      </summary>
      <param name="visitor">The criteria visitor to be accepted.</param>
      <returns>The visitor acceptance result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Accept``1(DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para>For internal use only. Accepts the specified visitor.</para>
      </summary>
      <param name="visitor">The criteria visitor to be accepted.</param>
      <typeparam name="T">The type of the acceptance result.</typeparam>
      <returns>The visitor acceptance result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.And(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> that groups specified criteria via the logical AND operator.</para>
      </summary>
      <param name="left">The first criterion to group.</param>
      <param name="right">The second criterion to group.</param>
      <returns>The new criterion that groups specified criteria via the logical AND operator.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.And(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator[])">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> that groups specified criteria via the logical AND operator.</para>
      </summary>
      <param name="operands">An array of criteria to group.</param>
      <returns>The new criterion that groups specified criteria via the logical AND operator.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.And(System.Collections.Generic.IEnumerable{DevExpress.XamarinForms.Core.Filtering.CriteriaOperator})">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> that groups specified criteria via the logical AND operator.</para>
      </summary>
      <param name="operands">A collection of criteria to group.</param>
      <returns>The new criterion that groups specified criteria via the logical AND operator.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Clone(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> instance that is a copy of the specified instance instance.</para>
      </summary>
      <param name="origin">The criterion to copy.</param>
      <returns>The new criterion that is a copy of the specified criterion.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Clone(DevExpress.XamarinForms.Core.Filtering.OperandProperty)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandProperty"/> instance that is a copy of the specified instance instance.</para>
      </summary>
      <param name="origin">The property operand to copy.</param>
      <returns>The new operand that is a copy of the specified operand.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Clone(System.Collections.ICollection)">
      <summary />
      <param name="origins"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.CloneCommon">
      <summary />
      <returns></returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.CriterionEquals(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Determines whether the specified <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/>s are equal.</para>
      </summary>
      <param name="left">The first criterion to compare.</param>
      <param name="right">The second criterion to compare.</param>
      <returns>true, if the specified criteria are equal; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.CustomFunctionCount">
      <summary>
        <para>Returns the number of registered custom functions.</para>
      </summary>
      <value>The number of registered custom functions.</value>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>true, if the specified object equals the current operator; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.GetCustomFunction(System.String)">
      <summary>
        <para>Returns a registered custom function with the specified name.</para>
      </summary>
      <param name="functionName">The name of a function to return.</param>
      <returns>The custom function.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.GetCustomFunctions">
      <summary>
        <para>Returns all registered custom functions.</para>
      </summary>
      <returns>A collection of registered custom functions.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.IsNotNull">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.UnaryOperator"/> instance that checks whether the current criterion is not null.</para>
      </summary>
      <returns>The new unary operator that checks whether the current criterion is not null.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.IsNull">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.UnaryOperator"/> instance that checks whether the current criterion is null.</para>
      </summary>
      <returns>The new unary operator that checks whether the current criterion is null.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.LegacyToString">
      <summary>
        <para>Converts the current expression into its string equivalent and removes value suffixes (like &#39;m&#39;, &#39;M&#39;, &#39;l&#39;, &#39;L&#39;, etc.)</para>
      </summary>
      <returns>The string equivalent of the criterion.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.LegacyToString(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Converts the specified expression into its string equivalent and removes value suffixes (like &#39;m&#39;, &#39;M&#39;, &#39;l&#39;, &#39;L&#39;, etc.)</para>
      </summary>
      <param name="criteria">The criterion to convert to a string.</param>
      <returns>The string equivalent of the criterion.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Not">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.UnaryOperator"/> instance that applies the logical NOT operator to the current criterion.</para>
      </summary>
      <returns>The unary operator that applies the  logical NOT operator to the current criterion.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.ObjectToCriteriaSafe(System.Object)">
      <summary />
      <param name="o"></param>
      <returns></returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Addition(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> instance that summarizes two specified criteria.</para>
      </summary>
      <param name="left">The criterion that specifies an augend.</param>
      <param name="right">The criterion that specifies an addend.</param>
      <returns>The new binary operator with the <see cref="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.OperatorType"/> property set to Plus.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_BitwiseAnd(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> instance that applies the bitwise AND operator to the specified criteria.</para>
      </summary>
      <param name="left">The first criterion to manipulate.</param>
      <param name="right">The second criterion to manipulate.</param>
      <returns>The new binary operator with the <see cref="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.OperatorType"/> property set to BitwiseAnd.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_BitwiseOr(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> instance that applies the bitwise OR operator to the specified criteria.</para>
      </summary>
      <param name="left">The first criterion to manipulate.</param>
      <param name="right">The second criterion to manipulate.</param>
      <returns>The new binary operator with the <see cref="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.OperatorType"/> property set to BitwiseOr.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Division(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> instance that divides the first specified criterion by the second.</para>
      </summary>
      <param name="left">The operator that specifies a dividend.</param>
      <param name="right">The operator that specifies a divider.</param>
      <returns>The binary operator with the <see cref="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.OperatorType"/> property set to Divide.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Equality(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> instance that checks whether values that the criteria specify are equal.</para>
      </summary>
      <param name="left">The criterion that specifies the first value to compare.</param>
      <param name="right">The criterion that specifies the second value to compare.</param>
      <returns>The new binary operator with the <see cref="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.OperatorType"/> set to Equal.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Explicit(System.Boolean)~DevExpress.XamarinForms.Core.Filtering.CriteriaOperator">
      <summary>
        <para>Explicitly converts the bool value into a <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> instance.</para>
      </summary>
      <param name="val">The value to convert into an &lt;DevExpress.XamarinForms.Core.Filtering.CriteriaOperator&gt; instance.</param>
      <returns>The criterion that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_GreaterThan(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> instance that checks whether a value the left criterion specifies is greater than a value the right criterion returns.</para>
      </summary>
      <param name="left">The first criterion to compare.</param>
      <param name="right">The second criterion to compare.</param>
      <returns>The new binary operator with the <see cref="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.OperatorType"/> field set to Greater.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_GreaterThanOrEqual(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> instance that checks whether a value the left criterion specifies is greater than or equal to a value the right criterion returns.</para>
      </summary>
      <param name="left">The first criterion to compare.</param>
      <param name="right">The second criterion to compare.</param>
      <returns>The new binary operator with the <see cref="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.OperatorType"/> field set to GreaterOrEqual.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Implicit(System.Byte)~DevExpress.XamarinForms.Core.Filtering.CriteriaOperator">
      <summary>
        <para>Implicitly converts the byte value into a &lt;DevExpress.XamarinForms.Core.Filtering.CriteriaOperator&gt; instance.</para>
      </summary>
      <param name="val">The value to convert into an &lt;DevExpress.XamarinForms.Core.Filtering.CriteriaOperator&gt; instance.</param>
      <returns>The criterion that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Implicit(System.Byte[])~DevExpress.XamarinForms.Core.Filtering.CriteriaOperator">
      <summary>
        <para>Implicitly converts the byte array into a <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> instance.</para>
      </summary>
      <param name="val">The value to convert into a &lt;DevExpress.XamarinForms.Core.Filtering.CriteriaOperator&gt; instance.</param>
      <returns>The criterion that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Implicit(System.Char)~DevExpress.XamarinForms.Core.Filtering.CriteriaOperator">
      <summary>
        <para>Implicitly converts the char value into a <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> instance.</para>
      </summary>
      <param name="val">The value to convert into a &lt;DevExpress.XamarinForms.Core.Filtering.CriteriaOperator&gt; instance.</param>
      <returns>The criterion that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Implicit(System.DateTime)~DevExpress.XamarinForms.Core.Filtering.CriteriaOperator">
      <summary>
        <para>Implicitly converts the &lt;xreF:System.DateTime&gt; value into a <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> instance.</para>
      </summary>
      <param name="val">The value to convert into a &lt;DevExpress.XamarinForms.Core.Filtering.CriteriaOperator&gt; instance.</param>
      <returns>The criterion that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Implicit(System.Decimal)~DevExpress.XamarinForms.Core.Filtering.CriteriaOperator">
      <summary>
        <para>Implicitly converts the decimal value into a <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> instance.</para>
      </summary>
      <param name="val">The value to convert into a &lt;DevExpress.XamarinForms.Core.Filtering.CriteriaOperator&gt; instance.</param>
      <returns>The criterion that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Implicit(System.Double)~DevExpress.XamarinForms.Core.Filtering.CriteriaOperator">
      <summary>
        <para>Implicitly converts the double value into a <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> instance.</para>
      </summary>
      <param name="val">The value to convert into a &lt;DevExpress.XamarinForms.Core.Filtering.CriteriaOperator&gt; instance.</param>
      <returns>The criterion that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Implicit(System.Guid)~DevExpress.XamarinForms.Core.Filtering.CriteriaOperator">
      <summary>
        <para>Implicitly converts the <see cref="T:System.Guid"/> into a <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> instance.</para>
      </summary>
      <param name="val">The value to convert into a &lt;DevExpress.XamarinForms.Core.Filtering.CriteriaOperator&gt; instance.</param>
      <returns>The criterion that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Implicit(System.Int16)~DevExpress.XamarinForms.Core.Filtering.CriteriaOperator">
      <summary>
        <para>Implicitly converts the short value into a <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> instance.</para>
      </summary>
      <param name="val">The value to convert into a &lt;DevExpress.XamarinForms.Core.Filtering.CriteriaOperator&gt; instance.</param>
      <returns>The criterion that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Implicit(System.Int32)~DevExpress.XamarinForms.Core.Filtering.CriteriaOperator">
      <summary>
        <para>Implicitly converts the int value into a <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> instance.</para>
      </summary>
      <param name="val">The value to convert into a &lt;DevExpress.XamarinForms.Core.Filtering.CriteriaOperator&gt; instance.</param>
      <returns>The criterion that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Implicit(System.Int64)~DevExpress.XamarinForms.Core.Filtering.CriteriaOperator">
      <summary>
        <para>Implicitly converts the long value into a <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> instance.</para>
      </summary>
      <param name="val">The value to convert into an &lt;DevExpress.XamarinForms.Core.Filtering.CriteriaOperator&gt; instance.</param>
      <returns>The criterion that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Implicit(System.Single)~DevExpress.XamarinForms.Core.Filtering.CriteriaOperator">
      <summary>
        <para>Implicitly converts the float value into a &lt;DevExpress.XamarinForms.Core.Filtering.CriteriaOperator&gt; instance.</para>
      </summary>
      <param name="val">The value to convert into a &lt;DevExpress.XamarinForms.Core.Filtering.CriteriaOperator&gt; instance.</param>
      <returns>The criterion that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Implicit(System.String)~DevExpress.XamarinForms.Core.Filtering.CriteriaOperator">
      <summary>
        <para>Implicitly converts the <see cref="T:System.String"/> into a <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> instance.</para>
      </summary>
      <param name="val">The value to convert into a &lt;DevExpress.XamarinForms.Core.Filtering.CriteriaOperator&gt; instance.</param>
      <returns>The criterion that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Implicit(System.TimeSpan)~DevExpress.XamarinForms.Core.Filtering.CriteriaOperator">
      <summary>
        <para>Implicitly converts the <see cref="T:System.TimeSpan"/> value into a <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> instance.</para>
      </summary>
      <param name="val">The value to convert into a &lt;DevExpress.XamarinForms.Core.Filtering.CriteriaOperator&gt; instance.</param>
      <returns>The criterion that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Inequality(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> instance that checks whether values that the criteria specify are not equal.</para>
      </summary>
      <param name="left">The first criterion to manipulate.</param>
      <param name="right">The second criterion to manipulate.</param>
      <returns>The new binary operator with the <see cref="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.OperatorType"/> field set to Equal.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_LessThan(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> instance that checks whether a value the left criterion specifies is less than a value the right criterion returns.</para>
      </summary>
      <param name="left">The first criterion to compare.</param>
      <param name="right">The second criterion to compare.</param>
      <returns>The new binary operator with the <see cref="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.OperatorType"/> field set to Less.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_LessThanOrEqual(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> instance that checks whether a value the left criterion specifies is less than or equal to a value the right criterion returns.</para>
      </summary>
      <param name="left">The first criterion to compare.</param>
      <param name="right">The second criterion to compare.</param>
      <returns>The new binary operator with the <see cref="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.OperatorType"/> field set to LessOrEqual.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_LogicalNot(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.UnaryOperator"/> instance that applies logical NOT operation to the current criterion.</para>
      </summary>
      <param name="operand">The criterion that specifies an operand.</param>
      <returns>The new unary operator with the <see cref="F:DevExpress.XamarinForms.Core.Filtering.UnaryOperator.OperatorType"/> property set to Not.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Modulus(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> instance that computes the dividing remainder of a value the left criterion specifies by a value the right criterion returns.</para>
      </summary>
      <param name="left">The criterion that specifies a dividend.</param>
      <param name="right">The criterion that specifies a divisor.</param>
      <returns>The binary operator with the <see cref="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.OperatorType"/> property set to Modulo.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Multiply(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> instance that multiplies the first specified criterion to the second.</para>
      </summary>
      <param name="left">The criterion that specifies a multiplicand.</param>
      <param name="right">The criterion that specifies a multiplier.</param>
      <returns>The binary operator with the <see cref="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.OperatorType"/> property set to Multiply.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_Subtraction(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> instance that computes difference between a value the left criterion specifies and a value the right criterion returns.</para>
      </summary>
      <param name="left">The criterion that specifies a minuend.</param>
      <param name="right">The criterion that specifies a subtrahend.</param>
      <returns>The binary operator with the <see cref="F:DevExpress.XamarinForms.Core.Filtering.BinaryOperator.OperatorType"/> property set to Minus.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_UnaryNegation(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.UnaryOperator"/> instance that applies unary minus operation to the current criterion.</para>
      </summary>
      <param name="operand">The criterion that specifies an operand.</param>
      <returns>The new unary operator with the <see cref="F:DevExpress.XamarinForms.Core.Filtering.UnaryOperator.OperatorType"/> property set to Minus.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.op_UnaryPlus(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.UnaryOperator"/> instance that applies unary plus operation to the current criterion.</para>
      </summary>
      <param name="operand">The criterion that specifies an operand.</param>
      <returns>The new unary operator with the <see cref="F:DevExpress.XamarinForms.Core.Filtering.UnaryOperator.OperatorType"/> property set to Plus.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Or(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> that groups specified criteria via the logical OR operator.</para>
      </summary>
      <param name="left">The first criterion to group.</param>
      <param name="right">The second criterion to group.</param>
      <returns>The new criterion that groups specified criteria via the logical OR operator.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Or(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator[])">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> that groups specified criteria via the logical OR operator.</para>
      </summary>
      <param name="operands">An array of criteria to group.</param>
      <returns>The new criterion that groups specified criteria via the logical OR operator.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Or(System.Collections.Generic.IEnumerable{DevExpress.XamarinForms.Core.Filtering.CriteriaOperator})">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> that groups specified criteria via the logical OR operator.</para>
      </summary>
      <param name="operands">A collection of criteria to group.</param>
      <returns>The new criterion that groups specified criteria via the logical OR operator.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,DevExpress.XamarinForms.Core.Filtering.OperandValue[]@)">
      <summary>
        <para>Converts the specified string into its <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> equivalent. Throws an exception if it cannot convert the string to a criterion.</para>
      </summary>
      <param name="stringCriteria">The expression string representation.</param>
      <param name="criteriaParametersList">An array of expressions that specify values that replaces question mark characters in the specified expression. These parameters can be omitted.</param>
      <returns>A <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> parsed from the specified string.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])">
      <summary>
        <para>Converts the specified string into its <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> equivalent. Throws an exception if it cannot convert the string to a criterion.</para>
      </summary>
      <param name="criteria">The expression string representation.</param>
      <param name="parameters">The values that replace question mark characters in the expression. These parameters can be omitted.</param>
      <returns>A <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> parsed from the specified string.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.ParseList(System.String,DevExpress.XamarinForms.Core.Filtering.OperandValue[]@)">
      <summary>
        <para>Converts the specified string into its <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/>s equivalent. Expressions should be divided by a semicolon (&#39;;&#39;). Throws an exception if it cannot convert the string to criteria.</para>
      </summary>
      <param name="criteriaList">The string representation of expressions. Expressions should be divided by a semicolon (&#39;;&#39;)</param>
      <param name="criteriaParametersList">An array of expressions that specify values that replaces question mark characters in the specified expression. These parameters can be omitted.</param>
      <returns>An array of <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> objects parsed from the specified string.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.ParseList(System.String,System.Object[])">
      <summary>
        <para>Converts the specified string into its <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/>s equivalent. Expressions should be divided by a semicolon (&#39;;&#39;). Throws an exception if it cannot convert the string to criteria.</para>
      </summary>
      <param name="criteriaList">The string representation of expressions. Expressions should be divided by a semicolon (&#39;;&#39;)</param>
      <param name="parameters">The values that replace question mark characters in the expression. These parameters can be omitted.</param>
      <returns>An array of <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> objects parsed from the specified string.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.RegisterCustomFunction(DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperator)">
      <summary>
        <para>Registers the specified custom function.</para>
      </summary>
      <param name="customFunction">Custom function to register in the Criteria Language.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.RegisterCustomFunctions(System.Collections.Generic.IEnumerable{DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperator})">
      <summary>
        <para>Registers the specified custom functions.</para>
      </summary>
      <param name="customFunctions">Custom functions to register in the Criteria Language.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.ToBasicStyleString(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Converts the specified expression into its VB-style string equivalent.</para>
      </summary>
      <param name="criteria">The criterion to convert into a string.</param>
      <returns>The VB-style string representation of this expression.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.ToBasicStyleString(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.OperandValue[]@)">
      <summary>
        <para>Converts the specified expression into its VB-style string equivalent.</para>
      </summary>
      <param name="criteria">The criterion to convert into a string.</param>
      <param name="criteriaParametersList">Values that are marked by the question mark (&#39;?&#39;) in the result string.</param>
      <returns>The VB-style string representation of this expression.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.ToCStyleString(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Converts the specified expression into its C#-style string equivalent.</para>
      </summary>
      <param name="criteria">The criterion to convert into a string.</param>
      <returns>The VB-style string representation of this expression.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.ToCStyleString(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.OperandValue[]@)">
      <summary>
        <para>Converts the specified expression into its C#-style string equivalent.</para>
      </summary>
      <param name="criteria">The criterion to convert into a string.</param>
      <param name="criteriaParametersList">Values that are marked by the question mark (&#39;?&#39;) in the result string.</param>
      <returns>The VB-style string representation of this expression.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.ToString">
      <summary>
        <para>Converts the current expression into its VB-style string equivalent.</para>
      </summary>
      <returns>The VB-style string representation of this expression.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.ToString(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Converts the specified expression into its VB-style string equivalent.</para>
      </summary>
      <param name="criteria">The criterion to convert into a string.</param>
      <returns>The VB-style string representation of this expression.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.ToString(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.OperandValue[]@)">
      <summary>
        <para>Converts the specified expression into its VB-style string equivalent.</para>
      </summary>
      <param name="criteria">The criterion to convert into a string.</param>
      <param name="criteriaParametersList">Values that are marked by the question mark (&#39;?&#39;) in the result string.</param>
      <returns>The VB-style string representation of this expression.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.TryParse(System.String,System.Object[])">
      <summary>
        <para>Converts the specified string into its <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> equivalent. Returns null if cannot convert the string to a criterion.</para>
      </summary>
      <param name="criteria">The expression string representation.</param>
      <param name="parameters">The values that replace question mark characters in the expression. These parameters can be omitted.</param>
      <returns>A <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> parsed from the specified string.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.UnregisterCustomFunction(DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperator)">
      <summary>
        <para>Cancels registration of the specified custom function.</para>
      </summary>
      <param name="customFunction">The custom function whose registration should be cancelled.</param>
      <returns>true, if a the specified function was removed from a collection of custom functions; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.UnregisterCustomFunction(System.String)">
      <summary>
        <para>Cancels registration of a custom function with the specified name.</para>
      </summary>
      <param name="functionName">The name of a custom function whose registration should be cancelled</param>
      <returns>true, if a custom function whose name matches the functionName was removed from a collection of custom functions; otherwise, false.</returns>
    </member>
    <member name="E:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.UserValueParse">
      <summary>
        <para>Occurs when a criteria operator parses a serialized user object.</para>
      </summary>
    </member>
    <member name="E:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.UserValueToString">
      <summary>
        <para>Occurs when a criteria operator serializes a user object.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperatorCollection">
      <summary>
        <para>The collection of <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator"/> objects.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperatorCollection.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperatorCollection"/> with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperatorCollection.#ctor(System.Int32)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperatorCollection"/> with the specified initial capacity.</para>
      </summary>
      <param name="capacity">The initial capacity. The value must be greater than or equal to 0.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperatorCollection.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.XamarinForms.Core.Filtering.CriteriaOperatorCollection"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>true, if the specified object equals the current operator; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperatorCollection.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperatorCollection.ToString">
      <summary>
        <para>Returns the string representation of the current object.</para>
      </summary>
      <returns>The string representation of the current object.</returns>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.CustomFunctionCollection">
      <summary>
        <para>For internal use only.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CustomFunctionCollection.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.CustomFunctionCollection"/> object with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CustomFunctionCollection.Add(DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperator)">
      <summary>
        <para>Adds the specified custom function to the collection.</para>
      </summary>
      <param name="item">The custom function to add.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CustomFunctionCollection.Add(System.Collections.Generic.IEnumerable{DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperator})">
      <summary>
        <para>Adds the specified custom functions to the collection.</para>
      </summary>
      <param name="items">A collection of custom functions to add.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CustomFunctionCollection.Clear">
      <summary>
        <para>Removes all custom functions from the collection.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CustomFunctionCollection.Contains(DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperator)">
      <summary>
        <para>Checks whether the specified custom function is in the collection.</para>
      </summary>
      <param name="item">The custom function to check.</param>
      <returns>true, if the collection contains the custom function; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CustomFunctionCollection.CopyTo(DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperator[],System.Int32)">
      <summary>
        <para>Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.</para>
      </summary>
      <param name="array">The destination of copied elements.</param>
      <param name="arrayIndex">The zero-based index of the array containig the first copied element.</param>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.CustomFunctionCollection.Count">
      <summary>
        <para>Returns the total number of custom functions in the collection.</para>
      </summary>
      <value>The total number of custom functions in the collection.</value>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CustomFunctionCollection.GetCustomFunction(System.String)">
      <summary>
        <para>Returns the custom function whose <see cref="P:DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperator.Name"/> is equal to the specified name.</para>
      </summary>
      <param name="functionName">The name of a custom function to search.</param>
      <returns>The custom function with the specified name.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CustomFunctionCollection.GetEnumerator">
      <summary>
        <para>Returns an enumerator that iterates through the collection.</para>
      </summary>
      <returns>The enumerator that iterates through the collection.</returns>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.CustomFunctionCollection.IsReadOnly">
      <summary>
        <para>Returns whether the collection is read-only.</para>
      </summary>
      <value>Always false.</value>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.CustomFunctionCollection.Remove(DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperator)">
      <summary>
        <para>Removes the specified custom function from the collection.</para>
      </summary>
      <param name="item">The custom function to remove.</param>
      <returns>true, if the custom function is successfully removed; otherwise, false.</returns>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.EnumProcessingHelper">
      <summary>
        <para>Provides methods that register enumeration types whose values Criteria Language expressions can serialize.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.EnumProcessingHelper.RegisterEnum(System.Type)">
      <summary>
        <para>Enables serialization of the specified enumeration type values in Criteria Language expressions.</para>
      </summary>
      <param name="enumType">The type of an enumeration to register.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.EnumProcessingHelper.RegisterEnum(System.Type,System.String)">
      <summary>
        <para>Enables serialization of the specified enumeration type values in Criteria Language expressions.</para>
      </summary>
      <param name="enumType">The type of an enumeration to register.</param>
      <param name="toStringName">The name that the expressions should use instead of <see cref="P:System.Type.FullName"/>.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.EnumProcessingHelper.RegisterEnum``1">
      <summary>
        <para>Enables serialization of the specified enumeration type values in Criteria Language expressions.</para>
      </summary>
      <typeparam name="T">The enumeration to register.</typeparam>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.EnumProcessingHelper.RegisterEnums(System.Reflection.Assembly)">
      <summary>
        <para>Enables serialization of all enumerations’ values from the specified assembly in Criteria Language expressions.</para>
      </summary>
      <param name="assembly">An assembly that contains enumerations to register.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.EnumProcessingHelper.RegisterEnums(System.Reflection.Assembly[])">
      <summary>
        <para>Enables serialization of all enumerations’ values from the specified assemblies in Criteria Language expressions.</para>
      </summary>
      <param name="assemblies">An array of assemblies that contain enumerations to register.</param>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.FunctionCategory">
      <summary>
        <para>List function type categories the Criteria Language supports.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.All">
      <summary>
        <para>Functions that can process data of any type.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime">
      <summary>
        <para>Functions that can process date-time data.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Logical">
      <summary>
        <para>Functions that can process boolean data.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math">
      <summary>
        <para>Functions that can process numeric data.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Text">
      <summary>
        <para>Functions that can process strings.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.FunctionOperator">
      <summary>
        <para>The operator in Criteria Language expressions that represents a function.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.FunctionOperator.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.FunctionOperator"/> instance with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.FunctionOperator.#ctor(DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator[])">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.FunctionOperator"/> instance with the specified predefined function type and operands.</para>
      </summary>
      <param name="type">The function type.</param>
      <param name="operands">An array of operands that the function manipulates.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.FunctionOperator.#ctor(DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType,System.Collections.Generic.IEnumerable{DevExpress.XamarinForms.Core.Filtering.CriteriaOperator})">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.FunctionOperator"/> instance with the specified predefined function type and operands.</para>
      </summary>
      <param name="type">The function type.</param>
      <param name="operands">A collection of operands that the function manipulates.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.FunctionOperator.#ctor(System.String,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator[])">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.FunctionOperator"/> instance with the specified custom function name and operands.</para>
      </summary>
      <param name="customFunctionName">The custom function name. Note that this function should be registered via the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.RegisterCustomFunction(DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperator)"/> or <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.RegisterCustomFunctions(System.Collections.Generic.IEnumerable{DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperator})"/> method.</param>
      <param name="operands">An array of operands that the function manipulates.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.FunctionOperator.#ctor(System.String,System.Collections.Generic.IEnumerable{DevExpress.XamarinForms.Core.Filtering.CriteriaOperator})">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.FunctionOperator"/> instance with the specified custom function name and operands.</para>
      </summary>
      <param name="customFunctionName">The custom function name. Note that this function should be registered via the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.RegisterCustomFunction(DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperator)"/> or <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.RegisterCustomFunctions(System.Collections.Generic.IEnumerable{DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperator})"/> method.</param>
      <param name="operands">A collection of operands that the function manipulates.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.FunctionOperator.Accept(DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor)">
      <summary>
        <para>For internal use only. Accepts the specified visitor.</para>
      </summary>
      <param name="visitor">The criteria visitor to be accepted.</param>
      <returns>The visitor acceptance result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.FunctionOperator.Accept``1(DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para>For internal use only. Accepts the specified visitor.</para>
      </summary>
      <param name="visitor">The criteria visitor to be accepted.</param>
      <typeparam name="T">The type of the acceptance result.</typeparam>
      <returns>The visitor acceptance result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.FunctionOperator.Clone">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.FunctionOperator"/> instance that is a copy of the current instance.</para>
      </summary>
      <returns>The copy of the current instance.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.FunctionOperator.CloneCommon">
      <summary />
      <returns></returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.FunctionOperator.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.XamarinForms.Core.Filtering.FunctionOperator"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>true, if the specified object equals the current operator; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.FunctionOperator.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.FunctionOperator.GuessIsLogicalCustomFunction(DevExpress.XamarinForms.Core.Filtering.FunctionOperator)">
      <summary>
        <para>For internal use only. Checks whether the operator specifies the boolean function.</para>
      </summary>
      <param name="theOperator">The operator to test.</param>
      <returns>true, if the operator represents a logical function; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.FunctionOperator.Operands">
      <summary>
        <para>Returns the collection of operands that the operator manipulates.</para>
      </summary>
      <value>The collection of operands that the operator manipulates.</value>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperator.OperatorType">
      <summary>
        <para>The type of the function the operator uses to manipulate with its operands.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType">
      <summary>
        <para>Lists functions the Criteria Language supports.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Abs">
      <summary>
        <para>Returns the absolute value of the numeric expression.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Abs([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Acos">
      <summary>
        <para>Returns the angle in radians, whose cosine is the given float expression.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Acos([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.AddDays">
      <summary>
        <para>Returns a new DateTime value that adds the specified number of days to the given value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;AddDays([FieldName], Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.AddHours">
      <summary>
        <para>Returns a new DateTime value that adds the specified number of hours to the given value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;AddHours([FieldName], Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.AddMilliSeconds">
      <summary>
        <para>Returns a new DateTime value that adds the specified number of milliseconds to the given value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;AddMilliSeconds([FieldName], Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.AddMinutes">
      <summary>
        <para>Returns a new DateTime value that adds the specified number of minutes to the given value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;AddMinutes([FieldName], Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.AddMonths">
      <summary>
        <para>Returns a new DateTime value that adds the specified number of months to the given value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;AddMonths([FieldName], Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.AddSeconds">
      <summary>
        <para>Returns a new DateTime value that adds the specified number of seconds to the given value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;AddSeconds([FieldName], Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.AddTicks">
      <summary>
        <para>Returns a new DateTime value that adds the specified number of ticks to the given value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;AddTicks([FieldName], Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.AddTimeSpan">
      <summary>
        <para>Returns a new DateTime value that adds the specified time span to the given value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;AddTimeSpan([FieldName], Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.AddYears">
      <summary>
        <para>Returns a new DateTime value that adds the specified number of years to the given value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;AddYears([FieldName], Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Ascii">
      <summary>
        <para>Returns the ASCII code of the first character in the specified string expression.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Text"/></para>
        <para>String analogue: &quot;Ascii([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Asin">
      <summary>
        <para>Returns the angle in radians, whose sine is the given float expression.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Asin([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Atn">
      <summary>
        <para>Returns the angle in radians, whose tangent is the given float expression.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Atan([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Atn2">
      <summary>
        <para>Returns the angle in radians, whose tangent is the quotient of two specified numbers.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Atan2([Field1Name], [Field2Name])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.BigMul">
      <summary>
        <para>Returns a long value that is the full product of two specified int values.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;BigMul([Field1Name], [Field2Name])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Ceiling">
      <summary>
        <para>Returns a smallest int value that is greater than or equal to the specified value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Ceiling([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Char">
      <summary>
        <para>Returns the character whose code the passed integer value specifies.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Text"/></para>
        <para>String analogue: &quot;Char(51)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.CharIndex">
      <summary>
        <para>Returns the zero-based position of the first string within the second string, beginning from the passed index or zero if it is not specified.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Text"/></para>
        <para>String analogue: &quot;CharIndex(&#39;e&#39;, &#39;DevExpress&#39;)&quot; or &quot;CharIndex(&#39;e&#39;, &#39;DevExpress&#39;, 3)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Concat">
      <summary>
        <para>Returns a string that is the concatenation of the all strings passed as arguments.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Text"/></para>
        <para>String analogue: &quot;CharIndex(&#39;Hello&#39;, &#39;, &#39;, &#39;World!&#39;)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Contains">
      <summary>
        <para>Returns true, if the first string contains the second; otherwise, false.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Text"/></para>
        <para>String analogue: &quot;Contains(&#39;DevExpress&#39;, &#39;e&#39;)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Cos">
      <summary>
        <para>Returns the cosine of the specified value in radians.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Cos([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Cosh">
      <summary>
        <para>Returns the hyperbolic cosine of the specified value in radians.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Cosh([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Custom">
      <summary>
        <para>The custom function the <see cref="T:DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperator"/> interface represents.</para>
        <para>You should register all custom operators the Criteria Language recognizes.</para>
        <para>Use the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.RegisterCustomFunction(DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperator)"/> or <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.RegisterCustomFunctions(System.Collections.Generic.IEnumerable{DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperator})"/> method to do this.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.DateDiffDay">
      <summary>
        <para>Returns the count of day boundaries between two specified dates.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;DateDiffDay(Value1, Value2)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.DateDiffHour">
      <summary>
        <para>Returns the count of hour boundaries between two specified dates.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;DateDiffHour(Value1, Value2)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.DateDiffMilliSecond">
      <summary>
        <para>Returns the count of millisecond boundaries between two specified dates.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;DateDiffMilliSecond(Value1, Value2)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.DateDiffMinute">
      <summary>
        <para>Returns the count of minute boundaries between two specified dates.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;DateDiffMinute(Value1, Value2)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.DateDiffMonth">
      <summary>
        <para>Returns the count of month boundaries between two specified dates.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;DateDiffMonth(Value1, Value2)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.DateDiffSecond">
      <summary>
        <para>Returns the count of second boundaries between two specified dates.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;DateDiffSecond(Value1, Value2)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.DateDiffTick">
      <summary>
        <para>Returns the count of tick boundaries between two specified dates.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;DateDiffTick(Value1, Value2)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.DateDiffYear">
      <summary>
        <para>Returns the count of year boundaries between two specified dates.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;DateDiffYear(Value1, Value2)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.EndsWith">
      <summary>
        <para>Returns true, if the end of the first string matches the second string; otherwise, false.</para>
        <para></para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Text"/></para>
        <para>String analogue: &quot;EndsWith([CompanyName], &#39;Express&#39;)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Exp">
      <summary>
        <para>Returns the exponential value of the specified value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Exp([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Floor">
      <summary>
        <para>Returns a largest int value that is smaller than or equal to the specified value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Floor([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.GetDate">
      <summary>
        <para>Returns a date from the specified DateTime expression.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;GetDate(Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.GetDay">
      <summary>
        <para>Returns a day from the specified DateTime expression.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;GetDay(Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.GetDayOfWeek">
      <summary>
        <para>Returns a day of the week from the specified DateTime expression.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;GetDayOfWeek(Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.GetDayOfYear">
      <summary>
        <para>Returns a day of the year from the specified DateTime expression.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;GetDayOfYear(Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.GetHour">
      <summary>
        <para>Returns an hour from the specified DateTime expression.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;GetHour(Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.GetMilliSecond">
      <summary>
        <para>Returns a millisecond from the specified DateTime expression.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;GetMilliSecond(Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.GetMinute">
      <summary>
        <para>Returns a minute from the specified DateTime expression.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;GetMinute(Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.GetMonth">
      <summary>
        <para>Returns a month from the specified DateTime expression.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;GetMonth(Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.GetSecond">
      <summary>
        <para>Returns a second from the specified DateTime expression.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;GetSecond(Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.GetTimeOfDay">
      <summary>
        <para>Returns a time of the day from the specified DateTime expression.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;GetYear(Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.GetYear">
      <summary>
        <para>Returns a year from the specified DateTime expression.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;GetYear(Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Iif">
      <summary>
        <para>Returns one of values, depending on which expression evaluates to true.</para>
        <para>The function takes 2N+1 arguments (N - the number of logical expressions):</para>
        <para></para>
        <para></para>
        <para></para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Logical"/></para>
        <para>String analogue: &quot;Iif([Expression1], [TrueValue1], ..., [ExpressionN], [TrueValueN], [FalseValue])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Insert">
      <summary>
        <para>Returns the string that contains the first string with the inserted second string starting with the specified zero-based position.</para>
        <para></para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Text"/></para>
        <para>String analogue: &quot;Insert([LastName], 0, [FirstName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.IsNull">
      <summary>
        <para>Returns the first value if it is not null; otherwise, the second value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Logical"/></para>
        <para>String analogue: &quot;IsNull([FieldName], Value2)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.IsNullOrEmpty">
      <summary>
        <para>Returns true, if the specified string is null or an empty string; otherwise, false.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Logical"/></para>
        <para>String analogue: &quot;IsNullOrEmpty([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.IsOutlookIntervalBeyondThisYear">
      <summary>
        <para>Returns whether the specified date is beyond this year (date &gt;= FirstDayOfNextYear).</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;IsOutlookIntervalBeyondThisYear([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.IsOutlookIntervalEarlierThisMonth">
      <summary>
        <para>Returns whether the specified date is earlier in this month (FirstDayOfThisMonth &lt;= date &lt;= FirstDayOfLastWeek).</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;IsOutlookIntervalEarlierThisMonth([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.IsOutlookIntervalEarlierThisWeek">
      <summary>
        <para>Returns whether the specified date is earlier in this week (FirstDayOfThisWeek &lt;= date &lt; Yesterday).</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;IsOutlookIntervalEarlierThisWeek([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.IsOutlookIntervalEarlierThisYear">
      <summary>
        <para>Returns whether the specified date is earlier in this year (FirstDayOfThisYear &lt;= date &lt; FirstDayOfThisMonth).</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;IsOutlookIntervalEarlierThisYear([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.IsOutlookIntervalLastWeek">
      <summary>
        <para>Returns whether the specified date is in last week (FirstDayOfLastWeek &lt;= date &lt; FirstDayOfThisWeek).</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;IsOutlookIntervalLastWeek([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.IsOutlookIntervalLaterThisMonth">
      <summary>
        <para>Returns whether the specified date is later in this month (LastDayOfNextWeek &lt; date &lt; FirstDayOfNextMonth).</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;IsOutlookIntervalLaterThisMonth([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.IsOutlookIntervalLaterThisWeek">
      <summary>
        <para>Returns whether the specified date is later in this week (DayAfterTomorrow &lt; date &lt; FirstDayOfNextWeek).</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;IsOutlookIntervalLaterThisweek([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.IsOutlookIntervalLaterThisYear">
      <summary>
        <para>Returns whether the specified date is later in this year (FirstDayOfNextMonth &lt;= date &lt; FirstDayOfNextYear).</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;IsOutlookIntervalLaterThisYear([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.IsOutlookIntervalNextWeek">
      <summary>
        <para>Returns whether the specified date is in next week (FirstDayOfNextWeek &lt;= date &lt; LastDayOfNextWeek).</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;IsOutlookIntervalNextWeek([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.IsOutlookIntervalPriorThisYear">
      <summary>
        <para>Returns whether the specified date is before this year (date &lt; FirstDayOfThisYear).</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;IsOutlookIntervalPriorThisYear([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.IsOutlookIntervalToday">
      <summary>
        <para>Returns whether the specified date is today.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;IsOutlookIntervalToday([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.IsOutlookIntervalTomorrow">
      <summary>
        <para>Returns whether the specified date is tomorrow.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;IsOutlookIntervalTomorrow([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.IsOutlookIntervalYesterday">
      <summary>
        <para>Returns whether the specified date is tomorrow.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;IsOutlookIntervalYesterday([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.IsThisMonth">
      <summary>
        <para>Returns whether the specified date is in the current month.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;IsThisMonth([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.IsThisWeek">
      <summary>
        <para>Returns whether the specified date is in the current week.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;IsThisWeek([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.IsThisYear">
      <summary>
        <para>Returns whether the specified date is in the current year.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;IsThisYear([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Len">
      <summary>
        <para>Returns an integer containing either the number of characters in a string or the nominal number of bytes required to store a variable.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.All"/></para>
        <para>String analogue: &quot;Len([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.LocalDateTimeDayAfterTomorrow">
      <summary>
        <para>Returns the date-time value that corresponds to the day after tomorrow.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;LocalDateTimeDayAfterTomorrow()&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.LocalDateTimeLastWeek">
      <summary>
        <para>Returns the date-time value that corresponds to the first day of the previous week.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;LocalDateTimeLastWeek()&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.LocalDateTimeNextMonth">
      <summary>
        <para>Returns the date-time value that corresponds to the first day of the next month.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;LocalDateTimeNextMonth()&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.LocalDateTimeNextWeek">
      <summary>
        <para>Returns the date-time value that corresponds to the first day of the next week.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;LocalDateTimeNextWeek()&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.LocalDateTimeNextYear">
      <summary>
        <para>Returns the date-time value that corresponds to the first day of the next year.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;LocalDateTimeNextYear()&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.LocalDateTimeNow">
      <summary>
        <para>Returns the date-time value that corresponds to the local date and time.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;LocalDateTimeNow()&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.LocalDateTimeThisMonth">
      <summary>
        <para>Returns the date-time value that corresponds to the first day of this month.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;LocalDateTimeThisMonth()&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.LocalDateTimeThisWeek">
      <summary>
        <para>Returns the date-time value that corresponds to the first day of this week.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;LocalDateTimeThisWeek()&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.LocalDateTimeThisYear">
      <summary>
        <para>Returns the date-time value that corresponds to the first day of this year.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;LocalDateTimeThisYear()&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.LocalDateTimeToday">
      <summary>
        <para>Returns the date-time value that corresponds to the current day’s midnight.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;LocalDateTimeToday()&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.LocalDateTimeTomorrow">
      <summary>
        <para>Returns the date-time value that corresponds to the tomorrow midnight.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;LocalDateTimeTomorrow()&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.LocalDateTimeTwoWeeksAway">
      <summary>
        <para>Returns the date-time value that corresponds to the first day of the week after the next.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;LocalDateTimeTwoWeeksAway()&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.LocalDateTimeYesterday">
      <summary>
        <para>Returns the date-time value that corresponds to the yesterday midnight.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: `&quot;LocalDateTimeYesterday()&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Log">
      <summary>
        <para>Returns the natural (base e) logarithm of the specified value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Log([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Log10">
      <summary>
        <para>Returns the common (base 10) logarithm of the specified value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Log10([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Lower">
      <summary>
        <para>Returns the specified string in lowercase.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Text"/></para>
        <para>String analogue: &quot;Lower([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Max">
      <summary>
        <para>Returns the maximum from specified values.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Max([Field1Name], [Field2Name], ..., [FieldNName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Min">
      <summary>
        <para>Returns the Minimum from specified values.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Min([Field1Name], [Field2Name], ..., [FieldNName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.None">
      <summary>
        <para>The function type is not specified.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Now">
      <summary>
        <para>Returns the current system date and time.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;Now()&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.PadLeft">
      <summary>
        <para>Returns the left-aligned string, filled with the specified character (whitespace by default) up to the specified string length.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Text"/></para>
        <para>String analogue: &quot;PadLeft([FieldName], Length)&quot; or &quot;PadLeft([FieldName], Length, Filler)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.PadRight">
      <summary>
        <para>Returns the right-aligned string, filled with the specified character (whitespace by default) up to the specified string length.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Text"/></para>
        <para>String analogue: &quot;PadRight([FieldName], Length)&quot; or &quot;PadRight([FieldName], Length, Filler)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Power">
      <summary>
        <para>Returns the specified numeric value raised to the specified power.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Power([Field1Name], Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Remove">
      <summary>
        <para>Returns a new string in which a specified number of characters (all, by default) in the passed string beginning at a given position, are removed.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Text"/></para>
        <para>String analogue: &quot;Remove([FieldName], StartIndex)&quot; or &quot;Remove([FieldName], StartIndex, Length)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Replace">
      <summary>
        <para>Returns a new string that is the first string in which the second string is replaced with the third string.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Text"/></para>
        <para>String analogue: &quot;Remove([FieldName], &#39;StringToReplace&#39;, &#39;NewString&#39;)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Reverse">
      <summary>
        <para>Returns a new string that is the specified string reversed.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Text"/></para>
        <para>String analogue: &quot;Reverse([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Rnd">
      <summary>
        <para>Returns a random number that is greater than or equal to zero and less than one.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Rnd()&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Round">
      <summary>
        <para>Rounds the specified value to the nearest integer or to the passed number of decimal places.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Round([FieldName])&quot; or &quot;Round([FieldName], Value)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Sign">
      <summary>
        <para>Returns a value indicating the sign of a number represented by a specified operand.</para>
        <para>The function returns one of the following values:</para>
        <para></para>
        <para></para>
        <para></para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Sign([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Sin">
      <summary>
        <para>Returns the sine of the specified value in radians.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Sin([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Sinh">
      <summary>
        <para>Returns the hyperbolic sine of the specified value in radians.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Sinh([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Sqr">
      <summary>
        <para>Returns the square root of the specified value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Sqr([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.StartsWith">
      <summary>
        <para>Returns true, if the start of the first string matches the second string; otherwise, false.</para>
        <para></para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Text"/></para>
        <para>String analogue: &quot;StartsWith([CompanyName], &#39;Dev&#39;)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Substring">
      <summary>
        <para>Returns a new string that is substring of the one specified. The substring starts at StartIndex and has a specified Length (up to the end by default).</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Text"/></para>
        <para>String analogue: &quot;StartsWith([CompanyName], StartIndex)&quot; or &quot;StartsWith([CompanyName], StartIndex, Length)&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Tan">
      <summary>
        <para>Returns the tangent of the specified value in radians.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Tan([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Tanh">
      <summary>
        <para>Returns the hyperbolic tangent of the specified value in radians.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;Tanh([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Today">
      <summary>
        <para>Returns the current system date. Regardless of the actual time, this function returns midnight of the current date.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;Today()&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.ToDecimal">
      <summary>
        <para>Returns the decimal value that is an equivalent of the specified value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;ToDecimal([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.ToDouble">
      <summary>
        <para>Returns the double value that is an equivalent of the specified value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;ToDouble([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.ToFloat">
      <summary>
        <para>Returns the float value that is an equivalent of the specified value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;ToFloat([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.ToInt">
      <summary>
        <para>Returns the int value that is an equivalent of the specified value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;ToInt([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.ToLong">
      <summary>
        <para>Returns the long value that is an equivalent of the specified value.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Math"/></para>
        <para>String analogue: &quot;ToLong([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.ToStr">
      <summary>
        <para>Returns a string representation of the specified object.</para>
        <para></para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.All"/></para>
        <para>String analogue: &quot;ToStr([Version])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Trim">
      <summary>
        <para>Removes all leading and trailing whitespaces from the specified string.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Text"/></para>
        <para>String analogue: &quot;Trim([CompanyName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.Upper">
      <summary>
        <para>Returns the specified string in uppercase.</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.Text"/></para>
        <para>String analogue: &quot;Upper([FieldName])&quot;</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.FunctionOperatorType.UtcNow">
      <summary>
        <para>Returns the current system date and time, expressed as Coordinated Universal Time (UTC).</para>
        <para>Category: <see cref="F:DevExpress.XamarinForms.Core.Filtering.FunctionCategory.DateTime"/></para>
        <para>String analogue: &quot;UtcNow()&quot;</para>
      </summary>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.GroupOperator">
      <summary>
        <para>The operator in Criteria Language expressions that combines operands with logical AND or OR.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.GroupOperator.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.GroupOperator"/> instance with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.GroupOperator.#ctor(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator[])">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.GroupOperator"/> instance with specified operands that the operator logically combines.</para>
      </summary>
      <param name="operands">An array of operands on which the operator acts.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.GroupOperator.#ctor(DevExpress.XamarinForms.Core.Filtering.GroupOperatorType,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator[])">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.GroupOperator"/> instance with the specified operator type and operands that the operator logically combines.</para>
      </summary>
      <param name="type">The operator type.</param>
      <param name="operands">An array of operands on which the operator acts.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.GroupOperator.#ctor(DevExpress.XamarinForms.Core.Filtering.GroupOperatorType,System.Collections.Generic.IEnumerable{DevExpress.XamarinForms.Core.Filtering.CriteriaOperator})">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.GroupOperator"/> instance with the specified operator type and operands that the operator logically combines.</para>
      </summary>
      <param name="type">The operator type.</param>
      <param name="operands">A collection of operands on which the operator acts.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.GroupOperator.Accept(DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor)">
      <summary>
        <para>For internal use only. Accepts the specified visitor.</para>
      </summary>
      <param name="visitor">The criteria visitor to be accepted.</param>
      <returns>The acceptance result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.GroupOperator.Accept``1(DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para>For internal use only. Accepts the specified visitor.</para>
      </summary>
      <param name="visitor">The criteria visitor to be accepted.</param>
      <typeparam name="T">The type of acceptance result.</typeparam>
      <returns>The acceptance result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.GroupOperator.Clone">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.GroupOperator"/> instance that is a copy of the current instance.</para>
      </summary>
      <returns>The copy of the current instance.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.GroupOperator.CloneCommon">
      <summary />
      <returns></returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.GroupOperator.Combine(DevExpress.XamarinForms.Core.Filtering.GroupOperatorType,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.GroupOperator"/> instance that logically combines the specified left and right operands using the passed operator type.</para>
      </summary>
      <param name="opType">The operator type.</param>
      <param name="left">The left operand to combine.</param>
      <param name="right">The right operand to combine.</param>
      <returns>The new operator that combines the operands.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.GroupOperator.Combine(DevExpress.XamarinForms.Core.Filtering.GroupOperatorType,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator[])">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.GroupOperator"/> instance that logically combines the specified operands using the passed operator type.</para>
      </summary>
      <param name="opType">The operator type.</param>
      <param name="operands">An array of operands that the operator combines.</param>
      <returns>The new operator that combines the operands.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.GroupOperator.Combine(DevExpress.XamarinForms.Core.Filtering.GroupOperatorType,System.Collections.Generic.IEnumerable{DevExpress.XamarinForms.Core.Filtering.CriteriaOperator})">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.GroupOperator"/> instance that logically combines the specified operands using the passed operator type.</para>
      </summary>
      <param name="opType">The operator type.</param>
      <param name="operands">A collection of operands that the operator combines.</param>
      <returns>The new operator that combines the operands.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.GroupOperator.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.XamarinForms.Core.Filtering.GroupOperator"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>true, if the specified object equals the current operator; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.GroupOperator.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.GroupOperator.Operands">
      <summary>
        <para>Returns the collection of operands that the operator logically combines.</para>
      </summary>
      <value>The collection of operands on which the operator acts.</value>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.GroupOperator.OperatorType">
      <summary>
        <para>Specifies the type (logical AND or logical OR) of the group operator. The <see cref="T:DevExpress.XamarinForms.Core.Filtering.GroupOperatorType"/> enumeration contains available values.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.GroupOperatorType">
      <summary>
        <para>Lists group operators the Criteria Language supports.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.GroupOperatorType.And">
      <summary>
        <para>The logical AND operator.</para>
        <para>Pass a string like &quot;FieldName &gt; 100 AND FieldName &lt; 250&quot; into the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])"/> method to create this operator from the string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.GroupOperatorType.Or">
      <summary>
        <para>The logical OR operator.</para>
        <para></para>
        <para>Pass a string like &quot;Field1Name &gt; 100 OR Field2Name &gt; 50&quot; into the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])"/> method to create this operator from the string.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.IClientCriteriaVisitor">
      <summary>
        <para>For internal use only. The interface the visitor of Criteria Language collection-based elements should implement.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.IClientCriteriaVisitor.Visit(DevExpress.XamarinForms.Core.Filtering.AggregateOperand)">
      <summary>
        <para>Visits the <see cref="T:DevExpress.XamarinForms.Core.Filtering.AggregateOperand"/> element.</para>
      </summary>
      <param name="theOperand">The Criteria Language element to visit.</param>
      <returns>The visit result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.IClientCriteriaVisitor.Visit(DevExpress.XamarinForms.Core.Filtering.OperandProperty)">
      <summary>
        <para>Visits the <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandProperty"/> element.</para>
      </summary>
      <param name="theOperand">The Criteria Language element to visit.</param>
      <returns>The visit result.</returns>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.IClientCriteriaVisitor`1">
      <summary>
        <para>For internal use only. The interface the generic visitor of Criteria Language collection-based elements should implement.</para>
      </summary>
      <typeparam name="T">The type of the Criteria Language element visit result.</typeparam>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.IClientCriteriaVisitor`1.Visit(DevExpress.XamarinForms.Core.Filtering.AggregateOperand)">
      <summary>
        <para>Visits the <see cref="T:DevExpress.XamarinForms.Core.Filtering.AggregateOperand"/> element.</para>
      </summary>
      <param name="theOperand">The Criteria Language element to visit.</param>
      <returns>The visit result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.IClientCriteriaVisitor`1.Visit(DevExpress.XamarinForms.Core.Filtering.OperandProperty)">
      <summary>
        <para>Visits the <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandProperty"/> element.</para>
      </summary>
      <param name="theOperand">The Criteria Language element to visit.</param>
      <returns>The visit result.</returns>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor">
      <summary>
        <para>For internal use only. The interface the Criteria Language element visitor should implement.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor.Visit(DevExpress.XamarinForms.Core.Filtering.BetweenOperator)">
      <summary>
        <para>Visits the <see cref="T:DevExpress.XamarinForms.Core.Filtering.BetweenOperator"/> element.</para>
      </summary>
      <param name="theOperator">The Criteria Language element to visit.</param>
      <returns>The visit result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor.Visit(DevExpress.XamarinForms.Core.Filtering.BinaryOperator)">
      <summary>
        <para>Visits the <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> element.</para>
      </summary>
      <param name="theOperator">The Criteria Language element to visit.</param>
      <returns>The visit result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor.Visit(DevExpress.XamarinForms.Core.Filtering.FunctionOperator)">
      <summary>
        <para>Visits the <see cref="T:DevExpress.XamarinForms.Core.Filtering.FunctionOperator"/> element.</para>
      </summary>
      <param name="theOperator">The Criteria Language element to visit.</param>
      <returns>The visit result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor.Visit(DevExpress.XamarinForms.Core.Filtering.GroupOperator)">
      <summary>
        <para>Visits the <see cref="T:DevExpress.XamarinForms.Core.Filtering.GroupOperator"/> element.</para>
      </summary>
      <param name="theOperator">The Criteria Language element to visit.</param>
      <returns>The visit result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor.Visit(DevExpress.XamarinForms.Core.Filtering.InOperator)">
      <summary>
        <para>Visits the <see cref="T:DevExpress.XamarinForms.Core.Filtering.InOperator"/> element.</para>
      </summary>
      <param name="theOperator">The Criteria Language element to visit.</param>
      <returns>The visit result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor.Visit(DevExpress.XamarinForms.Core.Filtering.OperandValue)">
      <summary>
        <para>Visits the <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandValue"/> element.</para>
      </summary>
      <param name="theOperand">The Criteria Language element to visit.</param>
      <returns>The visit result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor.Visit(DevExpress.XamarinForms.Core.Filtering.UnaryOperator)">
      <summary>
        <para>Visits the <see cref="T:DevExpress.XamarinForms.Core.Filtering.UnaryOperator"/> element.</para>
      </summary>
      <param name="theOperator">The Criteria Language element to visit.</param>
      <returns>The visit result.</returns>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor`1">
      <summary>
        <para>For internal use only. The generic interface the Criteria Language element visitor should implement.</para>
      </summary>
      <typeparam name="T">The type of the Criteria Language element visit result.</typeparam>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor`1.Visit(DevExpress.XamarinForms.Core.Filtering.BetweenOperator)">
      <summary>
        <para>Visits the <see cref="T:DevExpress.XamarinForms.Core.Filtering.BetweenOperator"/> element.</para>
      </summary>
      <param name="theOperator">The Criteria Language element to visit.</param>
      <returns>The visit result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor`1.Visit(DevExpress.XamarinForms.Core.Filtering.BinaryOperator)">
      <summary>
        <para>Visits the <see cref="T:DevExpress.XamarinForms.Core.Filtering.BinaryOperator"/> element.</para>
      </summary>
      <param name="theOperator">The Criteria Language element to visit.</param>
      <returns>The visit result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor`1.Visit(DevExpress.XamarinForms.Core.Filtering.FunctionOperator)">
      <summary>
        <para>Visits the <see cref="T:DevExpress.XamarinForms.Core.Filtering.FunctionOperator"/> element.</para>
      </summary>
      <param name="theOperator">The Criteria Language element to visit.</param>
      <returns>The visit result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor`1.Visit(DevExpress.XamarinForms.Core.Filtering.GroupOperator)">
      <summary>
        <para>Visits the <see cref="T:DevExpress.XamarinForms.Core.Filtering.GroupOperator"/> element.</para>
      </summary>
      <param name="theOperator">The Criteria Language element to visit.</param>
      <returns>The visit result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor`1.Visit(DevExpress.XamarinForms.Core.Filtering.InOperator)">
      <summary>
        <para>Visits the <see cref="T:DevExpress.XamarinForms.Core.Filtering.InOperator"/> element.</para>
      </summary>
      <param name="theOperator">The Criteria Language element to visit.</param>
      <returns>The visit result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor`1.Visit(DevExpress.XamarinForms.Core.Filtering.OperandValue)">
      <summary>
        <para>Visits the <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandValue"/> element.</para>
      </summary>
      <param name="theOperand">The Criteria Language element to visit.</param>
      <returns>The visit result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor`1.Visit(DevExpress.XamarinForms.Core.Filtering.UnaryOperator)">
      <summary>
        <para>Visits the <see cref="T:DevExpress.XamarinForms.Core.Filtering.UnaryOperator"/> element.</para>
      </summary>
      <param name="theOperator">The Criteria Language element to visit.</param>
      <returns>The visit result.</returns>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperator">
      <summary>
        <para>The interface of Criteria Language custom function.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperator.Evaluate(System.Object[])">
      <summary>
        <para>Evaluates the custom function.</para>
      </summary>
      <param name="operands">An array of function operands (parameters).</param>
      <returns>The custom function return value.</returns>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperator.Name">
      <summary>
        <para>Returns the name of the custom function.</para>
      </summary>
      <value>The name of the custom function.</value>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperator.ResultType(System.Type[])">
      <summary>
        <para>Defines value type by types of function operands (parameters).</para>
      </summary>
      <param name="operands">An array of function operator (parameter) types.</param>
      <returns>The custom function return value.</returns>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperatorBrowsable">
      <summary>
        <para>The interface of the custom function which GUI supports.</para>
      </summary>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperatorBrowsable.Category">
      <summary>
        <para>Returns the custom function category.</para>
      </summary>
      <value>The custom function category.</value>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperatorBrowsable.Description">
      <summary>
        <para>Returns the custom function description.</para>
      </summary>
      <value>The custom function description.</value>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperatorBrowsable.IsValidOperandCount(System.Int32)">
      <summary>
        <para>Checks whether the specified number of function operands (parameters) is valid.</para>
      </summary>
      <param name="count">The number of function operands (parameters).</param>
      <returns>true, if the number of operands is valid; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperatorBrowsable.IsValidOperandType(System.Int32,System.Int32,System.Type)">
      <summary>
        <para>Checks whether a function operand (parameter) with the specified index has the required type.</para>
      </summary>
      <param name="operandIndex">The index of the function operand.</param>
      <param name="operandCount">The total number of operands.</param>
      <param name="type">The operand type.</param>
      <returns>true, if the operand type is valid; otherwise, false.</returns>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperatorBrowsable.MaxOperandCount">
      <summary>
        <para>Returns the maximum count of function operands (parameters).</para>
      </summary>
      <value>The maximum count of function operands (parameters).</value>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.ICustomFunctionOperatorBrowsable.MinOperandCount">
      <summary>
        <para>Returns the minimum count of function operands (parameters).</para>
      </summary>
      <value>The minimum count of function operands (parameters).</value>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.InOperator">
      <summary>
        <para>The operator in Criteria Language expressions that matches a value with patterns.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.InOperator.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.InOperator"/> instance with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.InOperator.#ctor(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator[])">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.InOperator"/> instance with the criteria that specify an expression to match, and pattern expressions.</para>
      </summary>
      <param name="leftOperand">The criterion that specifies an expression to match to one of the operands.</param>
      <param name="operands">An array of criteria that are patterns, one of which the leftOperand expression should match.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.InOperator.#ctor(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator,System.Collections.Generic.IEnumerable{DevExpress.XamarinForms.Core.Filtering.CriteriaOperator})">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.InOperator"/> instance with criteria that specify an expression to match, and pattern expressions.</para>
      </summary>
      <param name="leftOperand">The criterion that specifies an expression to match to one of the operands.</param>
      <param name="operands">A collection of criteria that are patterns, one of which the leftOperand expression should match.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.InOperator.#ctor(System.String,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator[])">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.InOperator"/> instance with the specified name of a property to test, and pattern expressions.</para>
      </summary>
      <param name="propertyName">The name of the collection property by whose values the operand calculates an aggregate value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="operands">An array of criteria that are patterns, one of which the propertyName property value should match.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.InOperator.#ctor(System.String,System.Collections.IEnumerable)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.InOperator"/> instance with the specified name of a property to match, and pattern values.</para>
      </summary>
      <param name="propertyName">The name of the collection property by whose values the operand calculates an aggregate value.  It can be a path through object relationships, for example &quot;Employer.Addresses&quot;. This value is case-sensitive.</param>
      <param name="values">An array of object that are values, one of which the propertyName property value should match.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.InOperator.Accept(DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor)">
      <summary>
        <para>For internal use only. Accepts the specified visitor.</para>
      </summary>
      <param name="visitor">The criteria visitor to be accepted.</param>
      <returns>The visitor acceptance result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.InOperator.Accept``1(DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para>For internal use only. Accepts the specified visitor.</para>
      </summary>
      <param name="visitor">The criteria visitor to be accepted.</param>
      <typeparam name="T">Type of the acceptance result.</typeparam>
      <returns>The visitor acceptance result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.InOperator.Clone">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.InOperator"/> instance that is a copy of the current instance.</para>
      </summary>
      <returns>The copy of the current instance.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.InOperator.CloneCommon">
      <summary />
      <returns></returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.InOperator.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.XamarinForms.Core.Filtering.InOperator"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>true, if the specified object equals the current operator; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.InOperator.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.InOperator.LeftOperand">
      <summary>
        <para>Gets or sets the operand that the operator compares with <see cref="P:DevExpress.XamarinForms.Core.Filtering.InOperator.Operands"/>.</para>
      </summary>
      <value>The operand that the operator compares with <see cref="P:DevExpress.XamarinForms.Core.Filtering.InOperator.Operands"/>.</value>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.InOperator.Operands">
      <summary>
        <para>Gets or sets operands that are patterns with which the operator compares <see cref="P:DevExpress.XamarinForms.Core.Filtering.InOperator.LeftOperand"/>.</para>
      </summary>
      <value>A collection of operands that are patterns with which the operator compares <see cref="P:DevExpress.XamarinForms.Core.Filtering.InOperator.LeftOperand"/>.</value>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.NotOperator">
      <summary>
        <para>The logical NOT operation that inverts an operand.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.NotOperator.#ctor">
      <summary>
        <para>Initializes a new instance of the <see cref="T:DevExpress.XamarinForms.Core.Filtering.NotOperator"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.NotOperator.#ctor(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.NotOperator"/> instance that inverts the specified operator.</para>
      </summary>
      <param name="operand">The operator that should be logically inverted.</param>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.NullOperator">
      <summary>
        <para>The operator that compares a value with null.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.NullOperator.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.NullOperator"/> instance with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.NullOperator.#ctor(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.NullOperator"/> instance with a value the passed criterion specifies.</para>
      </summary>
      <param name="operand">The criterion that specifies the value to compare with null.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.NullOperator.#ctor(System.String)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.NullOperator"/> instance with a property value the passed string specifies.</para>
      </summary>
      <param name="operand">The name of the property to compare with null.</param>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.NullValue">
      <summary>
        <para>The value operand in Criteria Language expressions that specifies the null value.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.NullValue.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.NullValue"/> instance with the default settings.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.NullValue.Value">
      <summary>
        <para>Returns the initialized null value for Criteria Language expressions.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.OperandParameter">
      <summary>
        <para>For internal use only. The operator that represents another operator parameter in Criteria Language expressions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandParameter.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandParameter"/> instance with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandParameter.#ctor(System.String)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandParameter"/> instance with the specified parameter name.</para>
      </summary>
      <param name="parameterName">The parameter name.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandParameter.#ctor(System.String,System.Object)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandParameter"/> instance with the specified parameter name and value.</para>
      </summary>
      <param name="parameterName">The parameter name.</param>
      <param name="value">The parameter value.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandParameter.Clone">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandParameter"/> instance that is a copy of the current instance.</para>
      </summary>
      <returns>The copy of the current instance.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandParameter.CloneCommon">
      <summary />
      <returns></returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandParameter.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandParameter"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>true, if the specified object equals the current operator; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandParameter.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.OperandParameter.ParameterName">
      <summary>
        <para>Gets or sets the parameter name.</para>
      </summary>
      <value>The parameter name.</value>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.OperandProperty">
      <summary>
        <para>The operand that represents an object’s property in Criteria Language expressions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandProperty.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandProperty"/> instance with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandProperty.#ctor(System.String)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandProperty"/> instance with the specified property name.</para>
      </summary>
      <param name="propertyName">The property name. It can be a path through object relationships, for example &quot;Address.City&quot;.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandProperty.Accept(DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor)">
      <summary>
        <para>For internal use only. Accepts the specified visitor.</para>
      </summary>
      <param name="visitor">The criteria visitor to be accepted.</param>
      <returns>The visitor acceptance result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandProperty.Accept``1(DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para>For internal use only. Accepts the specified visitor.</para>
      </summary>
      <param name="visitor">The criteria visitor to be accepted.</param>
      <typeparam name="T">Type of the acceptance result.</typeparam>
      <returns>The visitor acceptance result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandProperty.Clone">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandProperty"/> instance that is a copy of the current instance.</para>
      </summary>
      <returns>The copy of the current instance.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandProperty.CloneCommon">
      <summary />
      <returns></returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandProperty.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandProperty"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>true, if the specified object equals the current operator; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandProperty.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.OperandProperty.Item(DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Returns the aggregate operand that evaluates the aggregate value by values that match the passed filter condition from the collection property the operand represents.</para>
      </summary>
      <param name="condition">The expression that filters the values from the collection property the operand represents.</param>
      <value>The operand that evaluates the aggregate value.</value>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.OperandProperty.PropertyName">
      <summary>
        <para>Gets or sets the name of the property the operand represents.</para>
      </summary>
      <value>The name of the property.</value>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.OperandValue">
      <summary>
        <para>The value operator in Criteria Language expressions.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandValue"/> instance with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.#ctor(System.Object)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandValue"/> instance with the specified value.</para>
      </summary>
      <param name="value">The operand value.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.Accept(DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor)">
      <summary>
        <para>For internal use only. Accepts the specified visitor.</para>
      </summary>
      <param name="visitor">The criteria visitor to be accepted.</param>
      <returns>The visitor acceptance result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.Accept``1(DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para>For internal use only. Accepts the specified visitor.</para>
      </summary>
      <param name="visitor">The criteria visitor to be accepted.</param>
      <typeparam name="T">Type of the acceptance result.</typeparam>
      <returns>The visitor acceptance result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.Clone">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandValue"/> instance that is a copy of the current instance.</para>
      </summary>
      <returns>The copy of the current instance.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.CloneCommon">
      <summary />
      <returns></returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandValue"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>true, if the specified object equals the current operator; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.GetXmlValue">
      <summary />
      <returns></returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.op_Explicit(System.Boolean)~DevExpress.XamarinForms.Core.Filtering.OperandValue">
      <summary>
        <para>Explicitly converts the bool value into an <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandValue"/> instance.</para>
      </summary>
      <param name="val">The value to convert into a &lt;DevExpress.XamarinForms.Core.Filtering.OperandValue&gt; instance.</param>
      <returns>The operand that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.op_Implicit(System.Byte)~DevExpress.XamarinForms.Core.Filtering.OperandValue">
      <summary>
        <para>Implicitly converts the byte value into an <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandValue"/> instance.</para>
      </summary>
      <param name="val">The value to convert into a &lt;DevExpress.XamarinForms.Core.Filtering.OperandValue&gt; instance.</param>
      <returns>The operand that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.op_Implicit(System.Byte[])~DevExpress.XamarinForms.Core.Filtering.OperandValue">
      <summary>
        <para>Implicitly converts the byte array into an <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandValue"/> instance.</para>
      </summary>
      <param name="val">The value to convert into an &lt;DevExpress.XamarinForms.Core.Filtering.OperandValue&gt; instance.</param>
      <returns>The operand that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.op_Implicit(System.Char)~DevExpress.XamarinForms.Core.Filtering.OperandValue">
      <summary>
        <para>Implicitly converts the char value into an <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandValue"/> instance.</para>
      </summary>
      <param name="val">The value to convert into an &lt;DevExpress.XamarinForms.Core.Filtering.OperandValue&gt; instance.</param>
      <returns>The operand that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.op_Implicit(System.DateTime)~DevExpress.XamarinForms.Core.Filtering.OperandValue">
      <summary>
        <para>Implicitly converts the <see cref="T:System.DateTime"/> value into an <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandValue"/> instance.</para>
      </summary>
      <param name="val">The value to convert into an &lt;DevExpress.XamarinForms.Core.Filtering.OperandValue&gt; instance.</param>
      <returns>The operand that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.op_Implicit(System.Decimal)~DevExpress.XamarinForms.Core.Filtering.OperandValue">
      <summary>
        <para>Implicitly converts the decimal value into an <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandValue"/> instance.</para>
      </summary>
      <param name="val">The value to convert into an &lt;DevExpress.XamarinForms.Core.Filtering.OperandValue&gt; instance.</param>
      <returns>The operand that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.op_Implicit(System.Double)~DevExpress.XamarinForms.Core.Filtering.OperandValue">
      <summary>
        <para>Implicitly converts the double value into an <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandValue"/> instance.</para>
      </summary>
      <param name="val">The value to convert into an &lt;DevExpress.XamarinForms.Core.Filtering.OperandValue&gt; instance.</param>
      <returns>The operand that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.op_Implicit(System.Guid)~DevExpress.XamarinForms.Core.Filtering.OperandValue">
      <summary>
        <para>Implicitly converts the <see cref="T:System.Guid"/> value into an <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandValue"/> instance.</para>
      </summary>
      <param name="val">The value to convert into an &lt;DevExpress.XamarinForms.Core.Filtering.OperandValue&gt; instance.</param>
      <returns>The operand that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.op_Implicit(System.Int16)~DevExpress.XamarinForms.Core.Filtering.OperandValue">
      <summary>
        <para>Implicitly converts the short value into an <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandValue"/> instance.</para>
      </summary>
      <param name="val">The value to convert into an &lt;DevExpress.XamarinForms.Core.Filtering.OperandValue&gt; instance.</param>
      <returns>The operand that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.op_Implicit(System.Int32)~DevExpress.XamarinForms.Core.Filtering.OperandValue">
      <summary>
        <para>Implicitly converts the int value into an <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandValue"/> instance.</para>
      </summary>
      <param name="val">The value to convert into an &lt;DevExpress.XamarinForms.Core.Filtering.OperandValue&gt; instance.</param>
      <returns>The operand that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.op_Implicit(System.Int64)~DevExpress.XamarinForms.Core.Filtering.OperandValue">
      <summary>
        <para>Implicitly converts the long value into an <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandValue"/> instance.</para>
      </summary>
      <param name="val">The value to convert into an &lt;DevExpress.XamarinForms.Core.Filtering.OperandValue&gt; instance.</param>
      <returns>The operand that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.op_Implicit(System.Single)~DevExpress.XamarinForms.Core.Filtering.OperandValue">
      <summary>
        <para>Implicitly converts the float value into an <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandValue"/> instance.</para>
      </summary>
      <param name="val">The value to convert into a &lt;DevExpress.XamarinForms.Core.Filtering.OperandValue&gt; instance.</param>
      <returns>The operand that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.op_Implicit(System.String)~DevExpress.XamarinForms.Core.Filtering.OperandValue">
      <summary>
        <para>Implicitly converts the <see cref="T:System.String"/> value into an <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandValue"/> instance.</para>
      </summary>
      <param name="val">The value to convert into an &lt;DevExpress.XamarinForms.Core.Filtering.OperandValue&gt; instance.</param>
      <returns>The operand that represents the specified value.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.OperandValue.op_Implicit(System.TimeSpan)~DevExpress.XamarinForms.Core.Filtering.OperandValue">
      <summary>
        <para>Implicitly converts the <see cref="T:System.TimeSpan"/> value into an <see cref="T:DevExpress.XamarinForms.Core.Filtering.OperandValue"/> instance.</para>
      </summary>
      <param name="val">The value to convert into an &lt;DevExpress.XamarinForms.Core.Filtering.OperandValue&gt; instance.</param>
      <returns>The operand that represents the specified value.</returns>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.OperandValue.Value">
      <summary>
        <para>Gets or sets an operand value.</para>
      </summary>
      <value>The operand value.</value>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Filtering.OperandValue.XmlValue">
      <summary>
        <para>For internal use only. Gets or sets the serialized value.</para>
      </summary>
      <value>The serialized value.</value>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.UnaryOperator">
      <summary>
        <para>The operator in the Criteria Language syntax that performs an operation on one expression.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.UnaryOperator.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.UnaryOperator"/> class with the default settings.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.UnaryOperator.#ctor(DevExpress.XamarinForms.Core.Filtering.UnaryOperatorType,DevExpress.XamarinForms.Core.Filtering.CriteriaOperator)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.UnaryOperator"/> class with the specified operator type and operand on which the operator acts.</para>
      </summary>
      <param name="operatorType">The operator type.</param>
      <param name="operand">The operator that specifies the unary operator’s operand.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.UnaryOperator.#ctor(DevExpress.XamarinForms.Core.Filtering.UnaryOperatorType,System.String)">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.UnaryOperator"/> class with the specified operator type and name of the property on which the operator acts.</para>
      </summary>
      <param name="operatorType">The operator type.</param>
      <param name="propertyName">The name of the property on which the operator acts.</param>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.UnaryOperator.Accept(DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor)">
      <summary>
        <para>For internal use only. Accepts the specified visitor.</para>
      </summary>
      <param name="visitor">The criteria visitor to be accepted.</param>
      <returns>The visitor acceptance result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.UnaryOperator.Accept``1(DevExpress.XamarinForms.Core.Filtering.ICriteriaVisitor{``0})">
      <summary>
        <para>For internal use only. Accepts the specified visitor.</para>
      </summary>
      <param name="visitor">The criteria visitor to be accepted.</param>
      <typeparam name="T">The type of acceptance result.</typeparam>
      <returns>The visitor acceptance result.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.UnaryOperator.Clone">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.UnaryOperator"/> instance that is a copy of the current instance.</para>
      </summary>
      <returns>The copy of the current instance.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.UnaryOperator.CloneCommon">
      <summary />
      <returns></returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.UnaryOperator.Equals(System.Object)">
      <summary>
        <para>Determines whether the specified object is equal to the current <see cref="T:DevExpress.XamarinForms.Core.Filtering.UnaryOperator"/> instance.</para>
      </summary>
      <param name="obj">The object to compare with the current instance.</param>
      <returns>true, if the specified object equals the current operator; otherwise, false.</returns>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.UnaryOperator.GetHashCode">
      <summary>
        <para>Serves as the default hash function.</para>
      </summary>
      <returns>A hash code for the current object.</returns>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.UnaryOperator.Operand">
      <summary>
        <para>The operand on which the operator acts.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.UnaryOperator.OperatorType">
      <summary>
        <para>The operand on which the operator acts.</para>
      </summary>
      <value></value>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.UnaryOperatorType">
      <summary>
        <para>Lists unary operators the Criteria Language supports.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.UnaryOperatorType.BitwiseNot">
      <summary>
        <para>The bitwise NOT operator.</para>
        <para>Pass a string like &quot;~FieldName&quot; into the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])"/> method to create this operator from the string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.UnaryOperatorType.IsNull">
      <summary>
        <para>The operator that compares the passed expression with null.</para>
        <para>Pass a string like &quot;FieldName IS NULL&quot; into the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])"/> method to create this operator from the string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.UnaryOperatorType.Minus">
      <summary>
        <para>The unary minus (-) operator.</para>
        <para>Pass a string like &quot;-FieldName&quot; into the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])"/> method to create this operator from the string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.UnaryOperatorType.Not">
      <summary>
        <para>The logical NOT operator.</para>
        <para>Pass a string like &quot;NOT(FieldName = Value)&quot; into the <see cref="M:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.Parse(System.String,System.Object[])"/> method to create this operator from the string.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.UnaryOperatorType.Plus">
      <summary>
        <para>Represents the unary plus (+) operator.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Filtering.UserValueProcessingEventArgs">
      <summary>
        <para>Provides data for the <see cref="E:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.UserValueParse"/> and <see cref="E:DevExpress.XamarinForms.Core.Filtering.CriteriaOperator.UserValueToString"/> events.</para>
      </summary>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Filtering.UserValueProcessingEventArgs.#ctor">
      <summary>
        <para>Initializes a new <see cref="T:DevExpress.XamarinForms.Core.Filtering.UserValueProcessingEventArgs"/> instance with the default settings.</para>
      </summary>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.UserValueProcessingEventArgs.Data">
      <summary>
        <para>The user object’s string representation.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.UserValueProcessingEventArgs.Handled">
      <summary>
        <para>Specifies whether the user object is serialized / parsed.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.UserValueProcessingEventArgs.Tag">
      <summary>
        <para>The supplementary information.</para>
      </summary>
      <value></value>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Filtering.UserValueProcessingEventArgs.Value">
      <summary>
        <para>The user object to serialize / parse.</para>
      </summary>
      <value></value>
    </member>
    <member name="N:DevExpress.XamarinForms.Core.Themes">
      <summary>
        <para>Contains classes and interfaces that allow you to apply themes to DevExpress Xamarin.Forms UI controls.</para>
      </summary>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Themes.IThemeChangingHandler">
      <summary />
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Themes.IThemeChangingHandler.OnThemeChanged">
      <summary />
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Themes.IThemeElement">
      <summary />
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Themes.Theme">
      <summary />
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Themes.Theme.#ctor">
      <summary />
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Themes.Theme.Dark">
      <summary />
      <value></value>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Themes.Theme.Light">
      <summary />
      <value></value>
    </member>
    <member name="T:DevExpress.XamarinForms.Core.Themes.ThemeManager">
      <summary />
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Themes.ThemeManager.#ctor">
      <summary />
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Themes.ThemeManager.AddThemeChangedHandler(DevExpress.XamarinForms.Core.Themes.IThemeChangingHandler)">
      <summary />
      <param name="handler"></param>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Themes.ThemeManager.AllowDefaultStyleApplyMethod">
      <summary />
      <value></value>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Themes.ThemeManager.AllowImplicitStyleMerging">
      <summary />
      <value></value>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Themes.ThemeManager.Initialize(Xamarin.Forms.Element)">
      <summary />
      <param name="element"></param>
    </member>
    <member name="F:DevExpress.XamarinForms.Core.Themes.ThemeManager.IsRefreshing">
      <summary />
      <value></value>
    </member>
    <member name="M:DevExpress.XamarinForms.Core.Themes.ThemeManager.LoadTheme(System.Type,System.Type)">
      <summary />
      <param name="newThemeType"></param>
      <param name="currentThemeType"></param>
      <returns></returns>
    </member>
    <member name="P:DevExpress.XamarinForms.Core.Themes.ThemeManager.ThemeName">
      <summary />
      <value></value>
    </member>
    <member name="E:DevExpress.XamarinForms.Core.Themes.ThemeManager.ThemeUpdated">
      <summary />
    </member>
  </members>
</doc>